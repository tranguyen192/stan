{"version":3,"sources":["images/icons/profile.png","images/mascots/iAmStan.svg","images/desk1.png","images/desk2.png","images/mascots/0-happy-0.svg","images/mascots/0-okay-0.svg","images/mascots/0-stressed-0.svg","images/mascots/0-veryhappy-0.svg","images/mascots/0-verystressed-0.svg","images/mascots/1-happy-0.svg","images/mascots/1-okay-0.svg","images/mascots/1-stressed-0.svg","images/mascots/1-veryhappy-0.svg","images/mascots/1-verystressed-0.svg","images/mascots/2-happy-0.svg","images/mascots/2-okay-0.svg","images/mascots/2-stressed-0.svg","images/mascots/2-veryhappy-0.svg","images/mascots/2-verystressed-0.svg","images/mascots/0-happy-1.svg","images/mascots/0-okay-1.svg","images/mascots/0-veryhappy-1.svg","images/mascots/0-verystressed-1.svg","images/mascots/1-happy-1.svg","images/mascots/1-okay-1.svg","images/mascots/1-stressed-1.svg","images/mascots/1-veryhappy-1.svg","images/mascots/1-verystressed-1.svg","images/mascots/2-happy-1.svg","images/mascots/2-okay-1.svg","images/mascots/2-stressed-1.svg","images/mascots/2-veryhappy-1.svg","images/mascots/2-verystressed-1.svg","images/mascots/user-mascot/0-1.svg","images/mascots/user-mascot/1-1.svg","images/mascots/user-mascot/2-1.svg","images/mascots/0-happy-2.svg","images/mascots/0-okay-2.svg","images/mascots/0-stressed-2.svg","images/mascots/0-veryhappy-2.svg","images/mascots/0-verystressed-2.svg","images/mascots/1-happy-2.svg","images/mascots/1-okay-2.svg","images/mascots/1-stressed-2.svg","images/mascots/1-veryhappy-2.svg","images/mascots/1-verystressed-2.svg","images/mascots/2-happy-2.svg","images/mascots/2-okay-2.svg","images/mascots/2-stressed-2.svg","images/mascots/2-veryhappy-2.svg","images/mascots/2-verystressed-2.svg","images/mascots/user-mascot/0-2.svg","images/mascots/user-mascot/1-2.svg","images/mascots/user-mascot/2-2.svg","accessToken.js","apolloClient.js","graphQL/queries.js","components/image/Image.js","components/burger-button/BurgerButton.js","graphQL/mutations.js","components/label/Label.js","components/input/Input.js","components/textarea/Textarea.js","components/button/Button.js","components/error/Error.js","components/loading/Loading.js","components/add-new/AddNew.js","pages/add-new-page/AddNewPage.js","helpers/dates.js","pages/calendar-page/CalendarPage.js","components/current-exam/Exam.js","pages/exams-page/ExamsPage.js","pages/no-match-page/404Page.js","pages/user-account-page/UserAccountPage.js","pages/user-account-page/UserAccountEdit.js","pages/imprint-page/ImprintPage.js","pages/data-policy-page/DataPolicyPage.js","components/login/Login.js","pages/login-page/LoginPage.js","components/signup/SignUp.js","pages/sign-up-page/SignUpPage.js","components/sub-heading/SubHeading.js","components/listing/Listing.js","components/empty-dashboard/EmptyDashboard.js","components/today-subject/TodaySubject.js","components/today-goals/TodayGoals.js","components/timeline/Timeline.js","components/today/Today.js","components/mascots/Mascots.js","components/current-state/CurrentState.js","pages/dashboard-page/DashboardPage.js","pages/home-page/HomePage.js","pages/about-page/AboutPage.js","components/login-popup/LoginPopUp.js","components/current-exam/ExamDetailsEdit.js","components/progressbar/ProgressBar.js","components/current-exam/ExamDetailsInfo.js","components/current-exam/ExamDetails.js","components/content/Content.js","components/backdrop/Backdrop.js","components/STAN/STAN.js","App.js","serviceWorker.js","index.js","images/mascots/user-mascot/0-0.svg","images/mascots/user-mascot/1-0.svg","images/mascots/user-mascot/2-0.svg","images/mascots/0-stressed-1.svg","images/icons/logo.svg","images/mascots sync /^/.//.*/-0/.svg$","images/mascots sync /^/.//.*/-1/.svg$","images/mascots sync /^/.//.*/-2/.svg$"],"names":["module","exports","accessToken","setAccessToken","s","getAccessToken","cache","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","setContext","headers","Authorization","subscribe","next","bind","error","complete","catch","unsubscribe","client","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","token","exp","jwtDecode","Date","now","err","console","fetchAccessToken","fetch","method","credentials","handleFetch","handleError","warn","onError","graphQLErrors","networkError","log","HttpLink","uri","gql","GET_EXAMS_QUERY","GET_EXAM_QUERY","GET_TODAYS_CHUNKS_AND_PROGRESS","GET_CALENDAR_CHUNKS","CURRENT_USER","GET_TODAYS_CHUNKS_PROGRESS","GET_EXAMS_COUNT","Image","path","alt","className","src","burgerButton","props","onClick","click","LOGIN_MUTATION","LOGOUT_MUTATION","ADD_EXAM_MUTATION","UPDATE_EXAM_MUTATION","EXAM_COMPLETED_MUTATION","DELETE_EXAM_MUTATION","UPDATE_CURRENT_PAGE_MUTATION","SIGNUP_MUTATION","UPDATE_MASCOT_MUTATION","GOOGLE_LOGIN_MUTATION","UPDATE_USER_MUTATION","DELETE_USER_MUTATION","Label","labeltype","text","htmlFor","forwardRef","ref","value","label","placeholder","type","id","name","onChange","maxLength","Button","variant","disabled","QueryError","errorMessage","href","Loading","AddNew","useForm","register","errors","handleSubmit","reset","onSubmit","formData","a","addExam","variables","subject","exam_subject","examDate","exam_date","startDate","exam_start_date","numberPages","parseInt","exam_page_amount","startPage","timePerPage","exam_page_time","timesRepeat","exam_page_repeat","notes","exam_page_notes","pdfLink","completed","refetchQueries","query","resp","data","document","getElementById","style","display","Error","message","useQuery","loading","useMutation","undefined","useCurrentUserValue","to","for","required","minLength","min","max","AddNewPage","formatDate","string","toLocaleDateString","year","month","day","minuteToHours","num","finalHour","finalMinute","hours","roundedHours","Math","floor","minutes","roundedMinutes","round","dayjs","extend","relativeTime","ExamsCalendar","chunks","exams","calendarChunks","calendarExams","aspectRatio","height","plugins","dayGridPlugin","listPlugin","defaultView","eventLimit","editable","eventOverlap","navLinks","locale","enLocale","eventSources","eventOrder","columnHeaderFormat","weekday","noEventsMessage","views","listWeek","buttonText","header","left","right","eventRender","info","popover","examDetails","event","extendedProps","currentPage","numberPagesLeftTotal","numberPagesPerDay","durationTotal","durationPerDay","el","backgroundColor","__typename","Popover","Title","as","title","body","Content","content","OverlayTrigger","rootClose","placement","overlay","trigger","view","ReactDOM","render","Exam","currentStatus","Exams","currentExams","archiveExams","url","useRouteMatch","useState","isArchiveOpen","setArchiveExams","currentExamsList","archiveExamsList","forEach","exam","push","map","key","toLowerCase","replace","length","NoMatch404","Stan","UserAccount","dataExamsCount","errorExamsCount","loadingExamsCount","dataCurrentState","errorCurrentState","loadingCurrentState","logout","currentUser","finishedExams","currentState","examsCount","todaysChunksProgress","logoutButton","mood","currentMood","googleLogin","clientId","process","onLogoutSuccess","logUserOut","renderProps","CurrentUserContext","Consumer","username","slice","email","start","end","duration","delay","showStatus","showThumbs","infiniteLoop","showIndicators","autoPlay","showArrows","require","mascot","window","localStorage","setItem","location","reload","UserAccountEdit","mascotStore","history","useHistory","deleteUser","updateUser","updateMascot","deleteProfile","setDeletion","isPasswordOpen","setPasswordSection","allowEmailNotifications","notification","setNotification","defaultValues","watch","setValue","useEffect","user","handleChange","e","persist","target","handleMascotCallback","handleUser","goBack","handleMascot","newPassword","retypePassword","editUser","mascotId","pattern","currentPassword","defaultChecked","useKeyboardArrows","selectedItem","VeryHappyMascot","VeryHappyGirlyMascot","VeryHappyCleverMascot","userDeletion","setTimeout","element","getElementsByClassName","innerHTML","password","Imprint","DataPolicy","rel","Login","successGoogle","response","idToken","tokenId","login","handleLogin","onSuccess","onFailure","failureGoogleResponse","JSON","stringify","Qt","Ad","cookiePolicy","LoginPage","SignUp","signup","retype_password","handleSignup","SignUpPage","SubHeading","Listing","EmptyDashboard","btnAddExam","heading","showBtn","TodaySubject","durationTime","TodayGoals","todaySubject","totalDurationTime","hoursTotal","minutesTotal","totalDuration","todaysChunkAndProgress","todaysChunks","filter","index","durationToday","preventDefault","activeElementIndexChange","activeIndex","Timeline","daysLeft","percentage","Today","pagesStudiedForm","deadline","realCurrentPage","chunkGoalPage","numberPagesToday","lastPage","repetition","repetitionCycles","repetitionCounter","totalDays","dayPercentage","chunksTotal","chunkPercentage","noTimeMessage","page_amount_studied","updatePage","page","examId","onSubmitAll","split","reverse","join","numberPagesWithRepeat","totalNumberDays","Mascots","mobile","random","CurrentState","motivation","motivationalSayings","interval","Dashboard","usersToDos","activeElementIndex","setActiveElementIndex","getItem","today","getDay","getDate","getMonth","getFullYear","getCurrentDate","Home","params","particles","number","density","enable","color","size","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","opacity","repulse","About","Pic1","Pic2","LoginPopUp","ExamDetailsEdit","toISOString","substr","updateExam","handleExam","ExamBar","width","ExamDetailsInfo","todaysDayUntilDeadline","UTC","abs","getNumberOfDays","toFixed","ExamDetails","edit","openEdit","popup","openPopup","setCompleted","paramId","URLSearchParams","search","get","getParamId","useLocation","deleteExam","examCompleted","handleEdit","handlePopup","examDeletion","completeExam","withRouter","exact","component","Calendar","ExamsDetails","backdrop","createContext","Navbar","isSideBarOpen","setSideBar","handleClickSidebar","closeSidebar","Backdrop","Provider","Logo","BurgerButton","strict","activeClassName","useContext","App","setLoading","addEventListener","removeItem","json","STAN","customLoading","background","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","Object"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,y8CCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,gFCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B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","file":"static/js/main.4e686fc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.ad041904.png\";","module.exports = __webpack_public_path__ + \"static/media/iAmStan.5a3e0477.svg\";","module.exports = __webpack_public_path__ + \"static/media/desk1.34921a2c.png\";","module.exports = __webpack_public_path__ + \"static/media/desk2.267b79ce.png\";","module.exports = __webpack_public_path__ + \"static/media/0-happy-0.813db462.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-okay-0.c77e936a.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-stressed-0.48113e15.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-veryhappy-0.0a915fbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-verystressed-0.3541fac3.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-happy-0.a7e55966.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-okay-0.05d50fe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-stressed-0.02a1896b.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-veryhappy-0.443d414d.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-verystressed-0.5d402600.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-happy-0.05949106.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-okay-0.a6461e9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-stressed-0.1338936c.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-veryhappy-0.05f1a491.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-verystressed-0.348ab6f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-happy-1.1bc2f5b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-okay-1.54379249.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-veryhappy-1.0e619144.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-verystressed-1.5b5a4d4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-happy-1.6818c309.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-okay-1.a6d7d00f.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-stressed-1.c954868e.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-veryhappy-1.e0825ced.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-verystressed-1.73ff55cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-happy-1.2d114206.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-okay-1.3517f416.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-stressed-1.744f73e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-veryhappy-1.56ea8231.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-verystressed-1.7fe06aa2.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-1.0e619144.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-1.e0825ced.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-1.56ea8231.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-happy-2.dc0b2670.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-okay-2.7a9d7b84.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-stressed-2.85c8915c.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-veryhappy-2.108815d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-verystressed-2.e1b407a6.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-happy-2.d888ba69.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-okay-2.9ed61ccd.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-stressed-2.34d90799.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-veryhappy-2.39532e6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-verystressed-2.d9c5fa7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-happy-2.e7aa7f20.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-okay-2.5c02c273.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-stressed-2.35c06991.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-veryhappy-2.92fd78bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-verystressed-2.7c526470.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-2.108815d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-2.39532e6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-2.92fd78bb.svg\";","let accessToken = \"\"\n\nexport const setAccessToken = s => {\n  accessToken = s\n}\n\nexport const getAccessToken = () => {\n  return accessToken\n}\n","import \"./App.scss\"\nimport { getAccessToken, setAccessToken } from \"./accessToken\"\n\nimport { ApolloClient } from \"apollo-client\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { HttpLink } from \"apollo-link-http\"\nimport { onError } from \"apollo-link-error\"\n\nimport { ApolloLink, Observable } from \"apollo-link\"\nimport jwtDecode from \"jwt-decode\"\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\"\n\nconst cache = new InMemoryCache({})\n\n//src: https://www.apollographql.com/docs/react/migrating/boost-migration/#advanced-migration\nconst requestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable(observer => {\n      let handle\n      Promise.resolve(operation)\n        .then(oper => {\n          //from old apollo boost client\n          const accessToken = getAccessToken()\n          if (accessToken) {\n            oper.setContext({\n              headers: {\n                Authorization: accessToken ? `bearer ${accessToken}` : \"\",\n              },\n            })\n          }\n        })\n        .then(() => {\n          handle = forward(operation).subscribe({\n            next: observer.next.bind(observer),\n            error: observer.error.bind(observer),\n            complete: observer.complete.bind(observer),\n          })\n        })\n        .catch(observer.error.bind(observer))\n\n      return () => {\n        if (handle) handle.unsubscribe()\n      }\n    })\n)\n\nexport const client = new ApolloClient({\n  link: ApolloLink.from([\n    new TokenRefreshLink({\n      accessTokenField: \"accessToken\",\n      isTokenValidOrUndefined: () => {\n        //checks if token is valid - called in every graphql request - only does something if token is invalid though\n        const token = getAccessToken()\n\n        if (!token) {\n          return true\n        }\n\n        try {\n          //exp = expires\n          const { exp } = jwtDecode(token)\n          //if currentdate is bigger than the expiration date of the accesstoken - times 1000 for seconds/milliseconds\n          if (Date.now() >= exp * 1000) {\n            return false\n          } else {\n            return true\n          }\n        } catch (err) {\n          console.error(err)\n          return false\n        }\n      },\n      fetchAccessToken: () => {\n        //if token is not valid\n        return fetch(\"/refresh_token\", {\n          method: \"POST\",\n          credentials: \"include\",\n          // headers: {},\n        })\n      },\n      //read access token from response\n      handleFetch: accessToken => {\n        //set accesstoken\n        setAccessToken(accessToken)\n      },\n\n      handleError: err => {\n        //called whenever try to fetch accesstoken (fetch post request - but shouldn't be called)\n        // full control over handling token fetch Error\n        console.warn(\"Your refresh token is invalid. Try to relogin\")\n        console.error(err)\n\n        // // your custom action here\n        // user.logout()\n      },\n    }),\n\n    onError(({ graphQLErrors, networkError }) => {\n      //TODO-AUTH\n      console.log(graphQLErrors)\n      console.log(networkError)\n      // if (graphQLErrors) {\n      //   sendToLoggingService(graphQLErrors)\n      // }\n      // if (networkError) {\n      //   logoutUser()\n      // }\n    }),\n    requestLink,\n\n    new HttpLink({\n      uri: \"/graphql\",\n      credentials: \"include\",\n    }),\n  ]),\n  cache,\n})\n","import { gql } from \"apollo-boost\" //to make queries\n\n//TODO: IMPORTANT - DELETE AS SOON AS POSSIBLE\nexport const GET_USERS_QUERY = gql`\n  {\n    users {\n      id\n      username\n      email\n      mascot\n    }\n  }\n`\n\nexport const GET_EXAMS_QUERY = gql`\n  {\n    exams {\n      id\n      subject\n      examDate\n      startDate\n      numberPages\n      timePerPage\n      timesRepeat\n      currentPage\n      startPage\n      notes\n      pdfLink\n      completed\n    }\n  }\n`\n\nexport const GET_EXAM_QUERY = gql`\n  query($id: ID!) {\n    exam(id: $id) {\n      id\n      subject\n      examDate\n      startDate\n      numberPages\n      timePerPage\n      timesRepeat\n      currentPage\n      startPage\n      notes\n      pdfLink\n      completed\n    }\n  }\n`\n\nexport const GET_TODAYS_CHUNKS_AND_PROGRESS = gql`\n  query {\n    todaysChunkAndProgress {\n      todaysChunks {\n        exam {\n          id\n          subject\n          examDate\n          startDate\n          totalNumberDays\n          numberPages\n          timesRepeat\n          currentPage\n          pdfLink\n        }\n        numberPagesToday\n        startPage\n        currentPage\n        durationToday\n        daysLeft\n        notEnoughTime\n        completed\n      }\n      todaysProgress\n    }\n  }\n`\n\nexport const GET_CALENDAR_CHUNKS = gql`\n  query {\n    calendarChunks {\n      calendarChunks {\n        title\n        start\n        end\n        color\n        extendedProps {\n          examDate\n          currentPage\n          numberPagesLeftTotal\n          numberPagesPerDay\n          durationTotal\n          durationPerDay\n          pdfLink\n        }\n      }\n      calendarExams {\n        title\n        start\n        end\n        color\n      }\n    }\n  }\n`\n\n//TODO: cache result of current user query - so you don't have to keep fetching it from the server - use apollo!\n//https://www.youtube.com/watch?v=25GS0MLT8JU 2:52:35\nexport const CURRENT_USER = gql`\n  query {\n    currentUser {\n      id\n      username\n      email\n      mascot\n      googleLogin\n      allowEmailNotifications\n    }\n  }\n`\n\nexport const GET_TODAYS_CHUNKS_PROGRESS = gql`\n  query {\n    todaysChunksProgress\n  }\n`\n\nexport const GET_EXAMS_COUNT = gql`\n  query {\n    examsCount {\n      currentExams\n      finishedExams\n    }\n  }\n`\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Image = ({ path, alt, className }) => {\n  // return ----------------\n  return <img alt={alt} src={path} className={className} />\n}\n\nexport default Image\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst burgerButton = props => (\n  <button className=\"burger__btn\" onClick={props.click}>\n    <div className=\"burger__btn__line line-1\" />\n    <div className=\"burger__btn__line line-2\" />\n    <div className=\"burger__btn__line line-3\" />\n  </button>\n)\n\nexport default burgerButton\n","import { gql } from \"apollo-boost\" //to make queries\n\nexport const LOGIN_MUTATION = gql`\n  mutation($email: String!, $password: String) {\n    login(email: $email, password: $password)\n  }\n`\n\nexport const LOGOUT_MUTATION = gql`\n  mutation {\n    logout\n  }\n`\n\n//!!Make sure the type in mutation here, is the same type as used by graphql\nexport const ADD_EXAM_MUTATION = gql`\n  mutation(\n    $subject: String!\n    $examDate: Date!\n    $startDate: Date!\n    $numberPages: Int!\n    $timePerPage: Int!\n    $timesRepeat: Int\n    $startPage: Int\n    $notes: String\n    $pdfLink: String\n    $completed: Boolean\n  ) {\n    addExam(\n      subject: $subject\n      examDate: $examDate\n      startDate: $startDate\n      numberPages: $numberPages\n      timePerPage: $timePerPage\n      timesRepeat: $timesRepeat\n      startPage: $startPage\n      notes: $notes\n      pdfLink: $pdfLink\n      completed: $completed\n    )\n  }\n`\n\nexport const UPDATE_EXAM_MUTATION = gql`\n  mutation(\n    $id: ID!\n    $subject: String!\n    $examDate: Date!\n    $startDate: Date!\n    $numberPages: Int!\n    $timePerPage: Int!\n    $timesRepeat: Int!\n    $startPage: Int!\n    $currentPage: Int!\n    $notes: String\n    $pdfLink: String # $completed: Boolean\n  ) {\n    updateExam(\n      id: $id\n      subject: $subject\n      examDate: $examDate\n      startDate: $startDate\n      numberPages: $numberPages\n      timePerPage: $timePerPage\n      timesRepeat: $timesRepeat\n      startPage: $startPage\n      currentPage: $currentPage\n      notes: $notes\n      pdfLink: $pdfLink # completed: $completed\n    ) {\n      id\n      subject\n      examDate\n      startDate\n      numberPages\n      timePerPage\n      timesRepeat\n      startPage\n      notes\n      pdfLink\n      completed\n    }\n  }\n`\n\nexport const EXAM_COMPLETED_MUTATION = gql`\n  mutation($id: ID!) {\n    examCompleted(id: $id)\n  }\n`\n\nexport const DELETE_EXAM_MUTATION = gql`\n  mutation($id: ID!) {\n    deleteExam(id: $id)\n  }\n`\n\nexport const UPDATE_CURRENT_PAGE_MUTATION = gql`\n  mutation($examId: ID!, $page: Int!) {\n    updateCurrentPage(examId: $examId, page: $page)\n  }\n`\n\nexport const SIGNUP_MUTATION = gql`\n  mutation(\n    $username: String!\n    $email: String!\n    $password: String\n    $mascot: Int\n    $allowEmailNotifications: Boolean!\n  ) {\n    signup(\n      username: $username\n      email: $email\n      password: $password\n      mascot: $mascot\n      allowEmailNotifications: $allowEmailNotifications\n    )\n  }\n`\n\nexport const UPDATE_MASCOT_MUTATION = gql`\n  mutation($mascot: Int!) {\n    updateMascot(mascot: $mascot)\n  }\n`\n\nexport const GOOGLE_LOGIN_MUTATION = gql`\n  mutation($idToken: String!) {\n    googleLogin(idToken: $idToken)\n  }\n`\n\nexport const UPDATE_USER_MUTATION = gql`\n  mutation(\n    $username: String!\n    $email: String!\n    $password: String\n    $newPassword: String\n    $mascot: Int!\n    $allowEmailNotifications: Boolean!\n  ) {\n    updateUser(\n      username: $username\n      email: $email\n      password: $password\n      newPassword: $newPassword\n      mascot: $mascot\n      allowEmailNotifications: $allowEmailNotifications\n    ) {\n      id\n      username\n      email\n      mascot\n      googleLogin\n      allowEmailNotifications\n    }\n  }\n`\n\nexport const DELETE_USER_MUTATION = gql`\n  mutation {\n    deleteUser\n  }\n`\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Label = ({ labeltype, text, className }) => {\n  // return ----------------\n  return (\n    <label htmlFor={labeltype} className={className}>\n      {text}\n    </label>\n  )\n}\n\nexport default Label\n","import React, { forwardRef } from \"react\"\n// --------------------------------------------------------------\n\nconst Input = ({ value, label, placeholder, type, id, className }, ref) => {\n  // return ----------------\n  return (\n    <input\n      ref={ref}\n      type={type}\n      id={id}\n      name={label}\n      placeholder={placeholder}\n      value={value}\n      className={className}\n    />\n  )\n}\n\nexport default forwardRef(Input)\n","import React, { forwardRef } from \"react\"\n// --------------------------------------------------------------\n\nconst Textarea = (\n  { value, onChange, label, placeholder, maxLength, id, className },\n  ref\n) => {\n  // return ----------------\n  return (\n    <textarea\n      ref={ref}\n      id={id}\n      name={label}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      maxLength={maxLength}\n      className={className}\n    />\n  )\n}\n\nexport default forwardRef(Textarea)\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Button = ({ variant, text, className, onClick, disabled }) => {\n  // return ----------------\n  return (\n    <button\n      type=\"submit\"\n      variant={variant}\n      className={className}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {text}\n    </button>\n  )\n}\n\nexport default Button\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst QueryError = ({ errorMessage }) => {\n  // return ----------------\n  return (\n    <div className=\"query-error\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"query-error__inner box-content\">\n            <div className=\"query-error__inner--headline\">\n              <h3>Something went wrong...</h3>\n            </div>\n\n            <div className=\"query-error__inner--text\">\n              <p>\n                The server isn't responding. You might just need to refresh the\n                page or login again. If you still see this error message, please\n                contact us at{\" \"}\n                <a href=\"mailto:medien@fh-salzburg.ac.at\">\n                  stan.studyplan@gmail.com\n                </a>\n                .\n              </p>\n\n              <p className=\"error\">{errorMessage}</p>\n            </div>\n\n            <div className=\"query-error__inner--button\">\n              <a href=\"/\" className=\"stan-btn-primary\">\n                Home\n              </a>\n              -\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default QueryError\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Loading = () => {\n  // return ----------------\n\n  return (\n    <div className=\"loader\">\n      <div className=\"square\"></div>\n    </div>\n  )\n}\n\nexport default Loading\n","import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport {\n  GET_EXAMS_QUERY,\n  GET_TODAYS_CHUNKS_AND_PROGRESS,\n  GET_CALENDAR_CHUNKS,\n  GET_EXAMS_COUNT,\n} from \"../../graphQL/queries\"\nimport { ADD_EXAM_MUTATION } from \"../../graphQL/mutations\"\nimport { useForm } from \"react-hook-form\"\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport Label from \"../../components/label/Label\"\nimport Input from \"../../components/input/Input\"\nimport Textarea from \"../../components/textarea/Textarea\"\nimport Button from \"../../components/button/Button\"\nimport QueryError from \"../../components/error/Error\"\nimport Loading from \"../../components/loading/Loading\"\n\nfunction AddNew() {\n  // form specific ----------------\n  const { register, errors, handleSubmit, reset } = useForm()\n\n  const onSubmit = async formData => {\n    try {\n      const resp = await addExam({\n        variables: {\n          subject: formData.exam_subject,\n          examDate: formData.exam_date,\n          startDate: formData.exam_start_date,\n          numberPages: parseInt(formData.exam_page_amount),\n          // startPage: parseInt(formData.exam_page_current),\n          startPage: 1,\n          timePerPage: parseInt(formData.exam_page_time),\n          timesRepeat: parseInt(formData.exam_page_repeat),\n          notes: formData.exam_page_notes,\n          // pdfLink: formData.exam_pdf_upload,\n          pdfLink: \"TODO: CHANGE LATER\",\n          completed: false,\n        },\n        refetchQueries: [\n          { query: GET_EXAMS_QUERY },\n          { query: GET_TODAYS_CHUNKS_AND_PROGRESS },\n          { query: GET_CALENDAR_CHUNKS },\n          { query: GET_EXAMS_COUNT },\n        ],\n      })\n\n      if (resp && resp.data && resp.data.addExam) {\n        // success message ----------------\n        document.getElementById(\"success-container-add-new\").style.display =\n          \"block\"\n\n        reset({}) // reset form data\n      } else {\n        // displays server error (backend)\n        throw new Error(\"The exam could not be added\")\n      }\n    } catch (err) {\n      // TODO: display error message\n      console.error(err.message)\n    }\n  }\n\n  // query ----------------\n  const { loading, error } = useQuery(GET_EXAMS_QUERY)\n\n  // mutation ----------------\n  const [addExam] = useMutation(ADD_EXAM_MUTATION)\n\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  // error handling ----------------\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n\n  // return ----------------\n  return (\n    <div className=\"add-new box-content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h3 className=\"add-new__heading\">Exam details</h3>\n          </div>\n          <div className=\"col-md-12\">\n            <form\n              onSubmit={handleSubmit(onSubmit)}\n              id=\"add-exam\"\n              className=\"form\"\n            >\n              <div className=\"row\">\n                <div className=\"col-md-6 form__left\">\n                  <div className=\"form__element\">\n                    <Label\n                      for=\"subject\"\n                      text=\"Subject\"\n                      className=\"form__element__label input-required\"\n                    ></Label>\n                    <Input\n                      className=\"form__element__input\"\n                      type=\"text\"\n                      id=\"subject\"\n                      label=\"exam_subject\"\n                      placeholder=\"Math\"\n                      required\n                      ref={register({\n                        required: true,\n                        minLength: 1,\n                        maxLength: 20,\n                      })}\n                    />\n                    {errors.exam_subject &&\n                      errors.exam_subject.type === \"required\" && (\n                        <span className=\"error\">This field is required</span>\n                      )}\n                    {errors.exam_subject &&\n                      errors.exam_subject.type === \"minLength\" && (\n                        <span className=\"error\">\n                          {\" \"}\n                          Minimum 1 character required\n                        </span>\n                      )}\n                    {errors.exam_subject &&\n                      errors.exam_subject.type === \"maxLength\" && (\n                        <span className=\"error\">\n                          {\" \"}\n                          Maximum 20 characters allowed\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"form__container form__container--numbers\">\n                    <div className=\"form__element\">\n                      <Label\n                        for=\"exam-date\"\n                        text=\"Exam date\"\n                        className=\"form__element__label input-required\"\n                      ></Label>\n                      <Input\n                        className=\"form__element__input\"\n                        type=\"date\"\n                        id=\"exam-date\"\n                        label=\"exam_date\"\n                        placeholder=\"DD/MM/YYYY\"\n                        required\n                        ref={register({\n                          required: true,\n                        })}\n                      />\n                      {errors.exam_date &&\n                        errors.exam_date.type === \"required\" && (\n                          <span className=\"error\">This field is required</span>\n                        )}\n                    </div>\n\n                    <div className=\"form__element\">\n                      <Label\n                        for=\"study-start-date\"\n                        text=\"Start learning on\"\n                        className=\"form__element__label input-required\"\n                      ></Label>\n                      <Input\n                        className=\"form__element__input\"\n                        type=\"date\"\n                        id=\"study-start-date\"\n                        label=\"exam_start_date\"\n                        placeholder=\"DD/MM/YYYY\"\n                        ref={register({\n                          required: false,\n                        })}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form__container form__container--numbers\">\n                    <div className=\"form__element\">\n                      <Label\n                        for=\"page-amount\"\n                        text=\"Amount of pages\"\n                        className=\"form__element__label input-required\"\n                      ></Label>\n                      <Input\n                        className=\"form__element__input\"\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"page-amount\"\n                        label=\"exam_page_amount\"\n                        placeholder=\"829\"\n                        required\n                        ref={register({\n                          required: true,\n                          min: 1,\n                          max: 10000,\n                        })}\n                      />\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"required\" && (\n                          <span className=\"error\">This field is required</span>\n                        )}\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"max\" && (\n                          <span className=\"error\">The maximum is 10.000</span>\n                        )}\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"min\" && (\n                          <span className=\"error\">\n                            Only positive numbers are allowed\n                          </span>\n                        )}\n                    </div>\n\n                    {/* <div className=\"form__element\">\n                      <Label\n                        for=\"page-current\"\n                        text=\"Start page\"\n                        className=\"form__element__label\"\n                      ></Label>\n                      <Input\n                        className=\"form__element__input\"\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"page-current\"\n                        label=\"exam_page_current\"\n                        placeholder=\"1\"\n                        ref={register({\n                          min: 1,\n                          max: 10000,\n                        })}\n                      />\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"max\" && (\n                          <span className=\"error\">The maximum is 10.000</span>\n                        )}\n                      {errors.exam_page_amount &&\n                        errors.exam_page_amount.type === \"min\" && (\n                          <span className=\"error\">\n                            Only positive numbers are allowed\n                          </span>\n                        )}\n                    </div> */}\n                  </div>\n\n                  <div className=\"form__container form__container--numbers\">\n                    <div className=\"form__element\">\n                      <Label\n                        for=\"page-time\"\n                        text=\"Time per page (min)\"\n                        className=\"form__element__label input-required\"\n                      ></Label>\n                      <Input\n                        className=\"form__element__input\"\n                        type=\"number\"\n                        min=\"0\"\n                        id=\"page-time\"\n                        label=\"exam_page_time\"\n                        placeholder=\"5 min\"\n                        ref={register({\n                          required: true,\n                          min: 1,\n                          max: 600,\n                        })}\n                        required\n                      />\n                      {errors.exam_page_time &&\n                        errors.exam_page_time.type === \"required\" && (\n                          <span className=\"error\">This field is required</span>\n                        )}\n                      {errors.exam_page_time &&\n                        errors.exam_page_time.type === \"max\" && (\n                          <span className=\"error\">\n                            {\" \"}\n                            The maximum is 600 minutes (10 hours)\n                          </span>\n                        )}\n                      {errors.exam_page_time &&\n                        errors.exam_page_time.type === \"min\" && (\n                          <span className=\"error\">\n                            Only positive numbers are allowed\n                          </span>\n                        )}\n                    </div>\n\n                    <div className=\"form__element\">\n                      <Label\n                        for=\"page-repeat\"\n                        text=\"Repeat\"\n                        className=\"form__element__label\"\n                      ></Label>\n                      <Input\n                        className=\"form__element__input\"\n                        type=\"number\"\n                        id=\"page-repeat\"\n                        label=\"exam_page_repeat\"\n                        placeholder=\"2 times\"\n                        ref={register({\n                          required: false,\n                          min: 1,\n                          max: 1000,\n                        })}\n                      />\n                    </div>\n                    {errors.exam_page_repeat &&\n                      errors.exam_page_repeat.type === \"max\" && (\n                        <span className=\"error\">\n                          {\" \"}\n                          The maximum is 1000 repeats\n                        </span>\n                      )}\n                    {errors.exam_page_repeat &&\n                      errors.exam_page_repeat.type === \"min\" && (\n                        <span className=\"error\">\n                          Only positive numbers are allowed\n                        </span>\n                      )}\n                  </div>\n                </div>\n\n                <div className=\"col-md-6 form__right\">\n                  <div className=\"form__right--top\">\n                    <div className=\"form__element\">\n                      <Label\n                        for=\"page-notes\"\n                        text=\"Notes\"\n                        className=\"form__element__label\"\n                      ></Label>\n                      <Textarea\n                        className=\"form__element__input\"\n                        id=\"page-notes\"\n                        label=\"exam_page_notes\"\n                        placeholder=\"...\"\n                        ref={register({\n                          required: false,\n                          maxLength: 100000000,\n                        })}\n                      ></Textarea>\n                      {errors.exam_page_notes &&\n                        errors.exam_page_notes.type === \"maxLength\" && (\n                          <span className=\"error\">\n                            The maximal length is 100.000.000 characters\n                          </span>\n                        )}\n                    </div>\n\n                    {/* TODO: implement file link or upload */}\n                    {/* <div className=\"form__element\">\n                      <Label\n                        for=\"pdf-upload\"\n                        text=\"Upload PDF file\"\n                        className=\"form__element__label\"\n                      ></Label>\n                      <Input\n                        className=\"form__element__input\"\n                        type=\"file\"\n                        accept=\"application/pdf, .pdf\"\n                        id=\"pdf-upload\"\n                        label=\"exam_pdf_upload\"\n                        ref={register({\n                          required: false,\n                        })}\n                      />\n                    </div> */}\n                  </div>\n\n                  <div className=\"form__submit\">\n                    <Button\n                      className=\"form__element__btn stan-btn-primary\"\n                      variant=\"button\"\n                      text=\"Add\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className=\"col-md-12\" id=\"success-container-add-new\">\n            <p className=\"success\">the exam was successfully added</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddNew\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { CURRENT_USER } from \"../../graphQL/queries\"\nimport { Redirect } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// context\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// components ----------------\nimport AddNew from \"../../components/add-new/AddNew\"\n\nfunction AddNewPage() {\n  // query ----------------\n  const { loading, error } = useQuery(CURRENT_USER)\n  const currentUser = useCurrentUserValue()\n\n  if (currentUser === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  // error handling ----------------\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  // return ----------------\n  return (\n    <div className=\"add-new-page\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2 className=\"add-new-page__heading\">New exam</h2>\n            <p className=\"add-new-page__sub-heading\">\n              enter all details about the exam\n            </p>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <AddNew />\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddNewPage\n","import dayjs from \"dayjs\"\nimport relativeTime from \"dayjs/plugin/relativeTime\"\ndayjs.extend(relativeTime)\n\nexport function datesTimingIsValid(startDate, examDate) {\n  return (\n    datesAreNotPast([startDate, examDate]) &&\n    startDateIsBeforeExamDate(startDate, examDate)\n  )\n}\n\nexport function startDateIsActive(startDate) {\n  return isToday(startDate) || dayjs(startDate).isBefore(dayjs())\n}\n\nexport function getNumberOfDays(startDate, examDate) {\n  //source: https://stackoverflow.com/a/2627493 &  https://stackoverflow.com/a/17727953\n  const start = Date.UTC(\n    examDate.getFullYear(),\n    examDate.getMonth(),\n    examDate.getDate()\n  )\n  const end = Date.UTC(\n    startDate.getFullYear(),\n    startDate.getMonth(),\n    startDate.getDate()\n  )\n\n  const oneDay = 24 * 60 * 60 * 1000 // hours*minutes*seconds*milliseconds\n  return Math.round(Math.abs((start - end) / oneDay))\n}\n\nexport function formatDate(string) {\n  let options = { year: \"numeric\", month: \"numeric\", day: \"numeric\" }\n  return new Date(string).toLocaleDateString(\"en-GB\", options)\n}\n\nexport function minuteToHours(num) {\n  let hours = num / 60\n  let roundedHours = Math.floor(hours)\n  let minutes = (hours - roundedHours) * 60\n  let roundedMinutes = Math.round(minutes)\n\n  let finalHour, finalMinute\n  if (roundedHours > 1) finalHour = roundedHours + \" hrs. \"\n  if (roundedHours <= 1) finalHour = roundedHours + \" hr. \"\n  if (roundedMinutes > 1) finalMinute = roundedMinutes + \" min.\"\n  if (roundedMinutes <= 1) finalMinute = roundedMinutes + \" mins.\"\n  if (roundedHours === 0) finalHour = \"\"\n  if (roundedMinutes === 0) finalMinute = \"\"\n\n  return finalHour + finalMinute\n}\n\n//------------------------HELPERS--------------------\n\nfunction datesAreNotPast(dates) {\n  for (let i = 0; i < dates.length; i++) {\n    // console.log(dates[i]);\n\n    //if today is after the date, then it is in the past\n    if (dayjs(dates[i]).isBefore(dayjs()) && !isToday(dates[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction startDateIsBeforeExamDate(startDate, examDate) {\n  return dayjs(startDate).isBefore(dayjs(examDate))\n}\n\n//modified from https://flaviocopes.com/how-to-determine-date-is-today-javascript/\nfunction isToday(date) {\n  const today = new Date()\n  return (\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n  )\n}\n","import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport ReactDOM from \"react-dom\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// query ----------------\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { GET_CALENDAR_CHUNKS } from \"../../graphQL/queries\"\n\n// helpers ----------------\nimport { formatDate, minuteToHours } from \"../../helpers/dates\"\n\n// components ----------------\nimport QueryError from \"../../components/error/Error\"\nimport Loading from \"../../components/loading/Loading\"\n\n// sub-components ----------------\nimport Button from \"../../components/button/Button\"\n\n// libraries ----------------\nimport FullCalendar from \"@fullcalendar/react\"\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\nimport listPlugin from \"@fullcalendar/list\"\nimport enLocale from \"@fullcalendar/core/locales/en-gb\"\n\n// react-bootstrap ----------------\nimport Popover from \"react-bootstrap/Popover\"\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\n\nconst ExamsCalendar = () => {\n  // query ----------------\n  const { loading, error, data } = useQuery(GET_CALENDAR_CHUNKS)\n  let chunks = []\n  let exams = []\n\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n  if (data && data.calendarChunks) {\n    chunks = data.calendarChunks.calendarChunks\n    exams = data.calendarChunks.calendarExams\n  }\n\n  // return ----------------\n  return (\n    <div className=\"exams-calendar\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-1\"></div>\n          <div className=\"exams-calendar__inner col-lg-10\">\n            <FullCalendar\n              id=\"calendar\"\n              className=\"calendar-table\"\n              aspectRatio=\"1.2\"\n              height=\"auto\"\n              plugins={[dayGridPlugin, listPlugin]}\n              defaultView=\"listWeek\"\n              eventLimit={true}\n              editable={true}\n              eventOverlap={false}\n              navLinks={true}\n              locale={enLocale}\n              eventSources={[chunks, exams]}\n              eventOrder={\"duration\"}\n              columnHeaderFormat={{ weekday: \"long\" }}\n              noEventsMessage=\"You've earned a break by now.\"\n              views={{\n                listWeek: {\n                  buttonText: \"week\",\n                },\n              }}\n              header={{\n                left: \"title\",\n                right: \"dayGridMonth, listWeek, prev, today, next\",\n              }}\n              eventRender={info => {\n                const examDetails = info.event.extendedProps\n                const examDate = examDetails.examDate\n                const currentPage = examDetails.currentPage\n                const numberPagesLeftTotal = examDetails.numberPagesLeftTotal\n                const numberPagesPerDay = examDetails.numberPagesPerDay\n                const durationTotal = examDetails.durationTotal\n                const durationPerDay = examDetails.durationPerDay\n                const pdfLink = examDetails.pdfLink\n\n                // background color for listview\n                info.el.style.backgroundColor = info.event.backgroundColor\n\n                let popover\n                if (examDetails.__typename === \"CalendarChunkDetails\") {\n                  popover = (\n                    <Popover id=\"popover-basic\">\n                      {examDetails.__typename === \"CalendarChunkDetails\" ? (\n                        <Popover.Title as=\"h4\" className=\"popover-title\">\n                          {info.event.title}\n\n                          <Button\n                            variant=\"button\"\n                            onClick={() => document.body.click()}\n                            className=\"exam-details__headline--back-btn close-calendar-popup\"\n                          />\n                        </Popover.Title>\n                      ) : null}\n\n                      <Popover.Content>\n                        <div className=\"exam-date\">\n                          <h5>Exam date:</h5>\n                          <p>{formatDate(examDate)}</p>\n                        </div>\n                        <div className=\"current-page\">\n                          <h5>Current page: </h5>\n                          <p>{currentPage}</p>\n                        </div>\n                        <div className=\"total-pages-left\">\n                          <h5>Total pages left: </h5>\n                          <p>{numberPagesLeftTotal}</p>\n                        </div>\n                        <div className=\"pages-per-day\">\n                          <h5>Pages per day to learn: ca. </h5>\n                          <p>{numberPagesPerDay}</p>\n                        </div>\n                        <div className=\"duration-per-day\">\n                          <h5>Duration per day: ca. </h5>\n                          <p>{minuteToHours(durationPerDay)}</p>\n                        </div>\n                        <div className=\"duration-total\">\n                          <h5>Duration total: </h5>\n                          <p>{minuteToHours(durationTotal)}</p>\n                        </div>\n                        <div className=\"pdfLink\">\n                          <a href={pdfLink}>Link</a>\n                        </div>\n                      </Popover.Content>\n                    </Popover>\n                  )\n                } else {\n                  popover = <div className=\"\">Exam deadline</div>\n                }\n\n                const content = (\n                  <OverlayTrigger\n                    rootClose\n                    placement=\"top\"\n                    overlay={popover}\n                    trigger=\"click\"\n                  >\n                    {info.view.type === \"dayGridMonth\" ? (\n                      <div className=\"fc-content\">\n                        <span className=\"fc-content fc-title\">\n                          {info.event.title}\n                        </span>\n                      </div>\n                    ) : (\n                      <td>\n                        <div className=\"fc-content\">\n                          <span className=\"fc-content fc-title\">\n                            {info.event.title}\n                          </span>\n                        </div>\n                      </td>\n                    )}\n                  </OverlayTrigger>\n                )\n                ReactDOM.render(content, info.el)\n              }}\n            />\n          </div>\n          <div className=\"col-lg-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ExamsCalendar\n","import React from \"react\"\n// --------------------------------------------------------------\n\nfunction Exam({ subject, currentStatus }) {\n  // return ----------------\n  return (\n    <div className=\"exam\">\n      <div className=\"exam__subject box-content\">\n        <div className=\"exam__subject--headline\">\n          <h4>{subject}</h4>\n        </div>\n        <div className=\"exam__subject--current-status\">\n          <p>completed {currentStatus}%</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Exam\n","import React, { useState } from \"react\"\nimport { Redirect, Link, useRouteMatch } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// queries ----------------\nimport { GET_EXAMS_QUERY } from \"../../graphQL/queries\"\nimport { useQuery } from \"@apollo/react-hooks\"\n\n// components ----------------\nimport Exam from \"../../components/current-exam/Exam\"\nimport QueryError from \"../../components/error/Error\"\nimport Loading from \"../../components/loading/Loading\"\n\nconst Exams = () => {\n  // router ----------------\n  let { url } = useRouteMatch()\n\n  // state & queries ----------------\n  const [isArchiveOpen, setArchiveExams] = useState(false)\n  const { data, loading, error } = useQuery(GET_EXAMS_QUERY)\n\n  // variables ----------------\n  let currentExams, archiveExams\n  let currentExamsList = []\n  let archiveExamsList = []\n\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n  if (data && data.exams) {\n    data.exams.forEach(exam => {\n      if (!exam.completed) {\n        currentExamsList.push({\n          id: exam.id,\n          subject: exam.subject,\n          numberPages: exam.numberPages,\n          currentPage: exam.currentPage,\n          timesRepeat: exam.timesRepeat,\n        })\n      } else {\n        archiveExamsList.push({\n          id: exam.id,\n          subject: exam.subject,\n          numberPages: exam.numberPages,\n          currentPage: exam.currentPage,\n          timesRepeat: exam.timesRepeat,\n        })\n      }\n    })\n  }\n\n  // functions ----------------\n  currentExams = currentExamsList.map(function(exam) {\n    return (\n      <div key={exam.id}>\n        <Link\n          to={`${url}/${exam.subject.toLowerCase().replace(/ /g, \"-\")}?id=${\n            exam.id\n          }`}\n        >\n          <Exam\n            subject={exam.subject}\n            currentStatus={Math.round(\n              (100 * exam.currentPage) / (exam.numberPages * exam.timesRepeat)\n            )}\n          />\n        </Link>\n      </div>\n    )\n  })\n\n  archiveExams = archiveExamsList.map(function(exam) {\n    return (\n      <div key={exam.id}>\n        <Link\n          to={`${url}/${exam.subject.toLowerCase().replace(/ /g, \"-\")}?id=${\n            exam.id\n          }`}\n        >\n          <Exam\n            subject={exam.subject}\n            currentStatus={Math.round(\n              (100 * exam.currentPage) / (exam.numberPages * exam.timesRepeat)\n            )}\n          />\n        </Link>\n      </div>\n    )\n  })\n\n  const handleArchiveClick = () => {\n    setArchiveExams(!isArchiveOpen)\n  }\n\n  // return ----------------\n  return (\n    <div className=\"exams\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"exams__headline\">\n              <h2>Current Exams</h2>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            {currentExamsList.length === 0 ? (\n              <div className=\"exams__empty\">\n                <div className=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"exams__empty__content box-content\">\n                        <div className=\"exams__empty__content--headline\">\n                          <h3>no open exams</h3>\n                        </div>\n\n                        <div className=\"exams__empty__content--text\">\n                          <p>\n                            Are you sure there are no exams you need to study\n                            for?\n                          </p>\n                        </div>\n\n                        <div className=\"exams__empty__content--btn\">\n                          <Link to=\"/add-new\" className=\"stan-btn-primary\">\n                            Add exam\n                          </Link>\n                        </div>\n                      </div>\n                      <div className=\"col-md-6\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"exams__currentExams\">{currentExams}</div>\n            )}\n\n            <div className=\"exams__archiveExamsToggle\">\n              <button\n                variant=\"button\"\n                onClick={handleArchiveClick}\n                className=\"exams__archiveExamsToggle--button\"\n              >\n                <h3>Past exams</h3>\n              </button>\n              <i className={isArchiveOpen ? \"arrow down\" : \"arrow right\"}></i>\n            </div>\n\n            <div className={isArchiveOpen ? \"fadeIn\" : \"fadeOut\"}>\n              {archiveExamsList.length === 0 ? (\n                <div className=\"exams__empty\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"exams__empty--pastExams box-content\">\n                          <p>no past exams</p>\n                        </div>\n                      </div>\n                      <div className=\"col-md-8\"></div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"exams__archiveExams\">{archiveExams}</div>\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Exams\n","import React from \"react\"\nimport Stan from \"../../images/mascots/0-stressed-1.svg\"\n// --------------------------------------------------------------\n\nfunction NoMatch404() {\n  // return ----------------\n  return (\n    <div className=\"no-match\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2 className=\"no-match__headline\">Awww...Don't Cry.</h2>\n            <h3 className=\"no-match__sub-headline\">It's just a 404 Error!</h3>\n            <p className=\"no-match__content\">\n              What you're looking for may have been misplaced in Long Term\n              Memory..\n            </p>\n\n            <div className=\"no-match__mascot\">\n              <img\n                src={Stan}\n                alt=\"Sad stan\"\n                className=\"no-match__mascot--img\"\n              />\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NoMatch404\n","import React from \"react\"\nimport { setAccessToken } from \"../../accessToken\"\nimport { GoogleLogout } from \"react-google-login\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport {\n  CurrentUserContext,\n  useCurrentUserValue,\n} from \"../../components/STAN/STAN\"\n\n// mutation & queries ----------------\nimport { Redirect, Link } from \"react-router-dom\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { LOGOUT_MUTATION } from \"../../graphQL/mutations\"\nimport {\n  GET_EXAMS_COUNT,\n  GET_TODAYS_CHUNKS_PROGRESS,\n} from \"../../graphQL/queries\"\n\n// libraries ----------------\nimport CountUp from \"react-countup\"\nimport { Carousel } from \"react-responsive-carousel\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\n// components ----------------\nimport QueryError from \"../../components/error/Error\"\nimport Loading from \"../../components/loading/Loading\"\n\n// sub components ----------------\nimport Button from \"../../components/button/Button\"\nimport Image from \"../../components/image/Image\"\n\nfunction UserAccount() {\n  // query ----------------\n  // TODO: use compose to combine queries\n  const {\n    data: dataExamsCount,\n    error: errorExamsCount,\n    loading: loadingExamsCount,\n  } = useQuery(GET_EXAMS_COUNT)\n  const {\n    data: dataCurrentState,\n    error: errorCurrentState,\n    loading: loadingCurrentState,\n  } = useQuery(GET_TODAYS_CHUNKS_PROGRESS)\n\n  // mutation ----------------\n  const [logout, { client }] = useMutation(LOGOUT_MUTATION)\n\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  // count all exams ----------------\n  let currentExams,\n    finishedExams,\n    currentState = 0\n\n  // error handling and get data ----------------\n  if (loadingExamsCount || loadingCurrentState) return <Loading />\n  if (errorExamsCount) {\n    return <QueryError errorMessage={errorExamsCount.message} />\n  }\n  if (errorCurrentState) {\n    return <QueryError errorMessage={errorCurrentState.message} />\n  }\n  if (dataExamsCount || dataCurrentState) {\n    currentExams = dataExamsCount.examsCount.currentExams\n    finishedExams = dataExamsCount.examsCount.finishedExams\n    currentState = dataCurrentState.todaysChunksProgress\n  }\n\n  // moods ----------------\n  let mood = currentMood(currentState)\n\n  // google logout ----------------\n  const currentUserGoogleLogin = currentUser.googleLogin\n  let logoutButton\n  if (!currentUserGoogleLogin) {\n    logoutButton = (\n      <Button\n        variant=\"button\"\n        className=\"\"\n        onClick={async () => logUserOut({ logout, client })}\n        text=\"Logout\"\n      />\n    )\n  } else {\n    logoutButton = (\n      <GoogleLogout\n        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n        buttonText=\"Logout\"\n        onLogoutSuccess={async () => logUserOut({ logout, client })}\n        render={renderProps => (\n          <button\n            variant=\"button\"\n            onClick={renderProps.onClick}\n            disabled={renderProps.disabled}\n          >\n            Logout\n          </button>\n        )}\n      />\n    )\n  }\n\n  // return ----------------\n  return (\n    <div className=\"user-account\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-9\">\n            <div className=\"user-account__headline\">\n              <CurrentUserContext.Consumer>\n                {currentUser => {\n                  let username = currentUser.username\n                  if (username.slice(-1) === \"s\") {\n                    return <h2>{username}' account</h2>\n                  } else {\n                    return <h2>{username}'s account</h2>\n                  }\n                }}\n              </CurrentUserContext.Consumer>\n            </div>\n          </div>\n          <div className=\"col-md-2\"></div>\n        </div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-5\">\n            <div className=\"user-account__container--left\">\n              <div className=\"user-account__container--left--top box-content\">\n                <div className=\"user-data\">\n                  <CurrentUserContext.Consumer>\n                    {currentUser => <h3>{currentUser.username}</h3>}\n                  </CurrentUserContext.Consumer>\n\n                  <CurrentUserContext.Consumer>\n                    {currentUser => <p>{currentUser.email}</p>}\n                  </CurrentUserContext.Consumer>\n                </div>\n\n                <div className=\"buttons\">\n                  <Link to=\"/profile/edit\">edit</Link>\n                  {logoutButton}\n                </div>\n              </div>\n\n              <div className=\"user-account__container--left--bottom box-content\">\n                <div className=\"total-exam\">\n                  <CountUp\n                    start={0}\n                    end={currentExams}\n                    duration={2.75}\n                    delay={0.5}\n                  />\n                  <p>\n                    total exams <br /> to study\n                  </p>\n                </div>\n\n                <div className=\"finished-exam\">\n                  <CountUp\n                    start={0}\n                    end={finishedExams}\n                    duration={2.75}\n                    delay={0.5}\n                  />\n                  <p>exams finished</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"user-account__container--right\">\n              <div className=\"user-account__container--right--top box-content\">\n                <h4>current state:</h4>\n                <p>{mood}</p>\n              </div>\n\n              <div className=\"user-account__container--right--bottom box-content\">\n                <Carousel\n                  showStatus={false}\n                  showThumbs={false}\n                  infiniteLoop={true}\n                  showIndicators={false}\n                  autoPlay={true}\n                  showArrows={false}\n                >\n                  <CurrentUserContext.Consumer>\n                    {currentUser => (\n                      <Image\n                        path={require(`../../images/mascots/${\n                          currentUser.mascot\n                        }-${mood.replace(/ /g, \"\")}-0.svg`)}\n                        text=\"\"\n                      />\n                    )}\n                  </CurrentUserContext.Consumer>\n\n                  <CurrentUserContext.Consumer>\n                    {currentUser => (\n                      <Image\n                        path={require(`../../images/mascots/${\n                          currentUser.mascot\n                        }-${mood.replace(/ /g, \"\")}-1.svg`)}\n                        text=\"\"\n                      />\n                    )}\n                  </CurrentUserContext.Consumer>\n\n                  <CurrentUserContext.Consumer>\n                    {currentUser => (\n                      <Image\n                        path={require(`../../images/mascots/${\n                          currentUser.mascot\n                        }-${mood.replace(/ /g, \"\")}-2.svg`)}\n                        text=\"\"\n                      />\n                    )}\n                  </CurrentUserContext.Consumer>\n                </Carousel>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-2\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserAccount\n\nasync function logUserOut({ logout, client }) {\n  // reset refresh token ----------------\n  await logout()\n\n  // reset access token ----------------\n  setAccessToken(\"\")\n\n  // reset mascot event ----------------\n  window.localStorage.setItem(\"mascot-event\", false)\n\n  // logout all other tabs ----------------\n  localStorage.setItem(\"logout-event\", Date.now())\n  window.location.reload()\n}\n\nexport const currentMood = currentState => {\n  let mood\n\n  if (currentState >= 0 && currentState <= 19) mood = \"very stressed\"\n  else if (currentState >= 20 && currentState <= 49) mood = \"stressed\"\n  else if (currentState >= 50 && currentState <= 69) mood = \"okay\"\n  else if (currentState >= 70 && currentState <= 89) mood = \"happy\"\n  else if (currentState >= 90 && currentState <= 100) mood = \"very happy\"\n\n  return mood\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { setAccessToken } from \"../../accessToken\"\nimport { useForm } from \"react-hook-form\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport {\n  CurrentUserContext,\n  useCurrentUserValue,\n} from \"../../components/STAN/STAN\"\n\n// mutations ----------------\nimport {\n  DELETE_USER_MUTATION,\n  UPDATE_MASCOT_MUTATION,\n  UPDATE_USER_MUTATION,\n} from \"../../graphQL/mutations\"\nimport { useMutation } from \"@apollo/react-hooks\"\n\n// components ----------------\nimport Button from \"../../components/button/Button\"\nimport Label from \"../../components/label/Label\"\n\n// sub-components ----------------\nimport Image from \"../../components/image/Image\"\n\n// mascots ----------------\nimport VeryHappyMascot from \"../../images/mascots/user-mascot/0-0.svg\"\nimport VeryHappyGirlyMascot from \"../../images/mascots/user-mascot/1-0.svg\"\nimport VeryHappyCleverMascot from \"../../images/mascots/user-mascot/2-0.svg\"\n\n// libraries ----------------\nimport { Carousel } from \"react-responsive-carousel\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\nconst UserAccountEdit = () => {\n  // variables ----------------\n  const mascotStore = { mascot: 0 }\n  let history = useHistory()\n\n  // context ----------------\n  const currentUser = useCurrentUserValue()\n\n  // mutations ----------------\n  const [deleteUser] = useMutation(DELETE_USER_MUTATION)\n  const [updateUser] = useMutation(UPDATE_USER_MUTATION)\n  const [updateMascot] = useMutation(UPDATE_MASCOT_MUTATION)\n\n  // state ----------------\n  const [deleteProfile, setDeletion] = useState(false)\n  const [isPasswordOpen, setPasswordSection] = useState(false)\n  let [notification, setNotification] = useState(\n    currentUser.allowEmailNotifications\n  )\n\n  // set default variables in form and make it editable ----------------\n  const { register, errors, watch, setValue, handleSubmit } = useForm({\n    defaultValues: {\n      username: currentUser.username,\n      email: currentUser.email,\n    },\n  })\n\n  const { username, email } = watch()\n\n  // use effect ----------------\n  useEffect(() => {\n    register({ user: \"username\" })\n    register({ user: \"email\" })\n  }, [register])\n\n  // functions ----------------\n  const handleChange = (user, e) => {\n    e.persist()\n    setValue(user, e.target.value)\n  }\n\n  const onSubmit = formData => {\n    // google login ----------------\n    if (currentUser.googleLogin) {\n      formData = mascotStore.mascot\n      handleMascot({ formData, updateMascot })\n    } else {\n      // standard login ----------------\n      if (formData.newPassword === formData.retypePassword) {\n        document.getElementById(\"retype-password-error\").style.display = \"none\"\n\n        let mascotId = mascotStore.mascot\n        editUser({ mascotId, formData, updateUser, history, notification })\n      } else {\n        document.getElementById(\"retype-password-error\").style.display = \"block\"\n      }\n    }\n  }\n\n  // TODO: fix reset mascot after button click\n  // functions ----------------\n  const handleMascotCallback = id => {\n    mascotStore.mascot = id\n  }\n\n  const handleUser = () => {\n    setDeletion(deleteProfile => !deleteProfile)\n  }\n\n  const handleDeletion = () => {\n    userDeletion({ currentUser, deleteUser })\n  }\n\n  const handleChangedPassword = () => {\n    setPasswordSection(!isPasswordOpen)\n  }\n\n  const handleNotification = () => {\n    setNotification(notification => !notification)\n  }\n\n  // return ----------------\n  return (\n    <div className=\"user-account-edit\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"user-account__headline\">\n              <CurrentUserContext.Consumer>\n                {currentUser => {\n                  let username = currentUser.username\n                  if (username.slice(-1) === \"s\") {\n                    return <h2>{username}' account</h2>\n                  } else {\n                    return <h2>{username}'s account</h2>\n                  }\n                }}\n              </CurrentUserContext.Consumer>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"user-account__edit box-content\">\n              <div className=\"row\">\n                <div className=\"col-xl-12\">\n                  <div className=\"user-account__edit--heading\">\n                    <div className=\"user-account__edit--heading--sub-heading\">\n                      <h3>Edit your profile details</h3>\n                    </div>\n\n                    <div className=\"user-account__edit--heading--delete-btn\">\n                      <Button\n                        className=\"back-button\"\n                        text=\"Back\"\n                        onClick={() => {\n                          history.goBack()\n                        }}\n                      />\n                      <Button\n                        className=\"delete-button\"\n                        onClick={handleUser}\n                        text=\"Delete\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-xl-12\">\n                  <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n                    <div className=\"row\">\n                      {!currentUser.googleLogin ? (\n                        <div className=\"col-xl-6 form__left\">\n                          <div className=\"form__element\">\n                            <div className=\"form__element--headline\">\n                              <h4>Profile details</h4>\n                            </div>\n\n                            <Label\n                              htmlFor=\"username\"\n                              text=\"Username\"\n                              className=\"form__element__label input-required\"\n                            />\n\n                            <input\n                              type=\"text\"\n                              id=\"username\"\n                              label=\"username\"\n                              name=\"username\"\n                              value={username}\n                              onChange={handleChange.bind(null, \"username\")}\n                              required\n                              ref={register({\n                                required: true,\n                                minLength: 1,\n                                maxLength: 30,\n                                pattern: /^.{1,30}$/,\n                              })}\n                            />\n\n                            {errors.username &&\n                            errors.username.type === \"required\" ? (\n                              <span className=\"error\">\n                                This field is required\n                              </span>\n                            ) : null}\n                            {errors.username &&\n                            errors.username.type === \"minLength\" ? (\n                              <span className=\"error\">\n                                {\" \"}\n                                Minimum 1 character required\n                              </span>\n                            ) : null}\n                            {errors.username &&\n                            errors.username.type === \"maxLength\" ? (\n                              <span className=\"error\">\n                                {\" \"}\n                                Maximum 30 characters allowed\n                              </span>\n                            ) : null}\n                            {errors.username &&\n                            errors.username.type === \"pattern\" ? (\n                              <span className=\"error\">\n                                The username needs to be between 1 and 30\n                                characters long\n                              </span>\n                            ) : null}\n                          </div>\n\n                          <div className=\"form__element\">\n                            <Label\n                              htmlFor=\"email\"\n                              text=\"Email\"\n                              className=\"form__element__label input-required\"\n                            />\n\n                            <input\n                              type=\"email\"\n                              id=\"email\"\n                              label=\"email\"\n                              name=\"email\"\n                              value={email}\n                              onChange={handleChange.bind(null, \"email\")}\n                              required\n                              ref={register({\n                                required: true,\n                                minLength: 1,\n                                maxLength: 50,\n                                pattern: /^([\\w_\\-\\.\\\"\\+\\!\\#\\$\\%\\&\\'\\*\\/\\=\\?\\^\\`\\{\\|\\}\\~ ]{1,64})@([\\w_\\-\\.]+)\\.([a-z]+)$/,\n                              })}\n                            />\n\n                            {errors.email &&\n                            errors.email.type === \"required\" ? (\n                              <span className=\"error\">\n                                This field is required\n                              </span>\n                            ) : null}\n                            {errors.email &&\n                            errors.email.type === \"minLength\" ? (\n                              <span className=\"error\">\n                                Minimum 1 character required\n                              </span>\n                            ) : null}\n                            {errors.email &&\n                            errors.email.type === \"maxLength\" ? (\n                              <span className=\"error\">\n                                Maximum 50 characters allowed\n                              </span>\n                            ) : null}\n                            {errors.email && errors.email.type === \"pattern\" ? (\n                              <span className=\"error\">\n                                This is no valid e-mail address\n                              </span>\n                            ) : null}\n                          </div>\n\n                          <div className=\"form__change-password\">\n                            <div className=\"form__passwordToggle\">\n                              <button\n                                type=\"button\"\n                                variant=\"button\"\n                                onClick={handleChangedPassword}\n                                className=\"form__passwordToggle--button\"\n                              >\n                                <h4>Change password</h4>\n                              </button>\n                              <i\n                                className={\n                                  isPasswordOpen ? \"arrow down\" : \"arrow right\"\n                                }\n                              ></i>\n                            </div>\n\n                            {isPasswordOpen ? (\n                              <div className=\"form__element\">\n                                <Label\n                                  htmlFor=\"currentPassword\"\n                                  text=\"Current password\"\n                                  className=\"form__element__label input-required\"\n                                />\n\n                                <input\n                                  type=\"password\"\n                                  id=\"currentPassword\"\n                                  label=\"currentPassword\"\n                                  name=\"currentPassword\"\n                                  required\n                                  ref={register({\n                                    required: true,\n                                    minLength: 8,\n                                    maxLength: 30,\n                                    pattern: /^.{8,30}$/,\n                                  })}\n                                />\n\n                                {errors.currentPassword &&\n                                errors.currentPassword.type === \"minLength\" ? (\n                                  <span className=\"error\">\n                                    {\" \"}\n                                    Minimum 8 characters required\n                                  </span>\n                                ) : null}\n                                {errors.currentPassword &&\n                                errors.currentPassword.type === \"maxLength\" ? (\n                                  <span className=\"error\">\n                                    {\" \"}\n                                    Maximum 30 characters allowed\n                                  </span>\n                                ) : null}\n                                {errors.currentPassword &&\n                                errors.currentPassword.type === \"pattern\" ? (\n                                  <span className=\"error\">\n                                    The password needs to be between 8 and 30\n                                    characters long\n                                  </span>\n                                ) : null}\n                              </div>\n                            ) : null}\n\n                            {isPasswordOpen ? (\n                              <div className=\"form__element\">\n                                <Label\n                                  htmlFor=\"newPassword\"\n                                  text=\"New password\"\n                                  className=\"form__element__label input-required\"\n                                />\n\n                                <input\n                                  type=\"password\"\n                                  id=\"newPassword\"\n                                  label=\"newPassword\"\n                                  name=\"newPassword\"\n                                  required\n                                  ref={register({\n                                    required: true,\n                                    minLength: 8,\n                                    maxLength: 30,\n                                    pattern: /^.{8,30}$/,\n                                  })}\n                                />\n\n                                {errors.newPassword &&\n                                errors.newPassword.type === \"minLength\" ? (\n                                  <span className=\"error\">\n                                    {\" \"}\n                                    Minimum 8 characters required\n                                  </span>\n                                ) : null}\n                                {errors.newPassword &&\n                                errors.newPassword.type === \"maxLength\" ? (\n                                  <span className=\"error\">\n                                    {\" \"}\n                                    Maximum 30 characters allowed\n                                  </span>\n                                ) : null}\n                                {errors.newPassword &&\n                                errors.newPassword.type === \"pattern\" ? (\n                                  <span className=\"error\">\n                                    The password needs to be between 8 and 30\n                                    characters long\n                                  </span>\n                                ) : null}\n                              </div>\n                            ) : null}\n\n                            {isPasswordOpen ? (\n                              <div className=\"form__element\">\n                                <Label\n                                  htmlFor=\"retypePassword\"\n                                  text=\"Retype new password\"\n                                  className=\"form__element__label input-required\"\n                                />\n\n                                <input\n                                  type=\"password\"\n                                  id=\"retypePassword\"\n                                  label=\"retypePassword\"\n                                  name=\"retypePassword\"\n                                  required\n                                  ref={register({\n                                    required: true,\n                                    minLength: 8,\n                                    maxLength: 30,\n                                    pattern: /^.{8,30}$/,\n                                  })}\n                                />\n\n                                {errors.retypePassword &&\n                                errors.retypePassword.type === \"minLength\" ? (\n                                  <span className=\"error\">\n                                    {\" \"}\n                                    Minimum 8 characters required\n                                  </span>\n                                ) : null}\n                                {errors.retypePassword &&\n                                errors.retypePassword.type === \"maxLength\" ? (\n                                  <span className=\"error\">\n                                    {\" \"}\n                                    Maximum 30 characters allowed\n                                  </span>\n                                ) : null}\n                                {errors.retypePassword &&\n                                errors.retypePassword.type === \"pattern\" ? (\n                                  <span className=\"error\">\n                                    The password needs to be between 8 and 30\n                                    characters long\n                                  </span>\n                                ) : null}\n                              </div>\n                            ) : null}\n                          </div>\n\n                          <div className=\"form__notifications login__form__notifications\">\n                            <label htmlFor=\"notification\" className=\"container\">\n                              <input\n                                type=\"checkbox\"\n                                id=\"notification\"\n                                name=\"notification\"\n                                value=\"notification\"\n                                defaultChecked={\n                                  currentUser.allowEmailNotifications\n                                }\n                                onChange={handleNotification}\n                              />\n                              <span className=\"checkmark\"></span>\n                              Allow email notifications when exam date is close\n                              (can be changed at any time in the user profile)\n                            </label>\n                          </div>\n                        </div>\n                      ) : null}\n\n                      {!currentUser.googleLogin ? (\n                        <div className=\"col-xl-6 form__right\">\n                          <div className=\"user-account__edit__carousel\">\n                            <h4>Choose your mascot</h4>\n\n                            <Carousel\n                              showStatus={false}\n                              showThumbs={false}\n                              useKeyboardArrows={true}\n                              onChange={e => {\n                                handleMascotCallback(e)\n                              }}\n                              selectedItem={currentUser.mascot}\n                            >\n                              <Image\n                                path={VeryHappyMascot}\n                                text=\"a very happy mascot\"\n                              />\n                              <Image\n                                path={VeryHappyGirlyMascot}\n                                text=\"a very happy girly mascot\"\n                              />\n                              <Image\n                                path={VeryHappyCleverMascot}\n                                text=\"a very happy clever mascot\"\n                              />\n                            </Carousel>\n                          </div>\n\n                          <div className=\"user-account__edit--form__button\">\n                            <Button\n                              variant=\"button\"\n                              text=\"Save\"\n                              className=\"stan-btn-primary\"\n                            />\n                          </div>\n                        </div>\n                      ) : (\n                        <div className=\"col-xl-12\">\n                          <div className=\"user-account__edit__carousel\">\n                            <h4>Choose your mascot</h4>\n\n                            <Carousel\n                              showStatus={false}\n                              showThumbs={false}\n                              useKeyboardArrows={true}\n                              onChange={e => {\n                                handleMascotCallback(e)\n                              }}\n                              selectedItem={currentUser.mascot}\n                            >\n                              <Image\n                                path={VeryHappyMascot}\n                                text=\"a very happy mascot\"\n                              />\n                              <Image\n                                path={VeryHappyGirlyMascot}\n                                text=\"a very happy girly mascot\"\n                              />\n                              <Image\n                                path={VeryHappyCleverMascot}\n                                text=\"a very happy clever mascot\"\n                              />\n                            </Carousel>\n                          </div>\n\n                          <div className=\"user-account__edit--form__button\">\n                            <Button\n                              variant=\"button\"\n                              text=\"Save\"\n                              className=\"stan-btn-primary\"\n                            />\n                          </div>\n                        </div>\n                      )}\n\n                      <div\n                        className=\"col-md-12\"\n                        id=\"success-container-edit-user\"\n                      >\n                        <p className=\"success\">\n                          the changes were successfully saved\n                        </p>\n                      </div>\n\n                      <div\n                        className=\"col-md-12\"\n                        id=\"success-container-edit-mascot\"\n                      >\n                        <p className=\"success\">\n                          the new mascot was successfully saved\n                        </p>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <div id=\"retype-password-error\" className=\"error\">\n                          <p>Please make sure your new passwords match.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"col-md-12\">\n                        <p className=\"error graphql-user-edit-error\"></p>\n                        <p className=\"error graphql-user-mascot-edit-error\"></p>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n\n                {deleteProfile ? (\n                  <div className=\"col-xl-12\">\n                    <div className=\"user-account__edit--popup\">\n                      <div className=\"user-account__edit--popup--inner box-content\">\n                        <div className=\"user-account__edit--popup--inner--headline\">\n                          <h4>Are you sure you want to delete this account?</h4>\n                        </div>\n\n                        <div className=\"user-account__edit--popup--inner--buttons\">\n                          <Button\n                            className=\"stan-btn-secondary\"\n                            text=\"Yes\"\n                            onClick={handleDeletion}\n                          />\n                          <Button\n                            className=\"stan-btn-primary\"\n                            text=\"No\"\n                            onClick={handleUser}\n                          />\n                        </div>\n\n                        <div className=\"col-md-12\">\n                          <p className=\"error graphql-user-delete-error\"></p>\n                        </div>\n\n                        <div\n                          className=\"col-md-12\"\n                          id=\"success-container-delete-user\"\n                        >\n                          <p className=\"success\">\n                            your account was successfully deleted\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserAccountEdit\n\nasync function userDeletion({ currentUser, deleteUser }) {\n  try {\n    const resp = await deleteUser({\n      currentUser,\n    })\n\n    if (resp && resp.data && resp.data.deleteUser) {\n      setAccessToken(\"\")\n      document.getElementById(\"success-container-delete-user\").style.display =\n        \"block\"\n    } else {\n      throw new Error(\"Cannot delete current user.\")\n    }\n\n    // reset mascot event ----------------\n    window.localStorage.setItem(\"mascot-event\", false)\n\n    // redirect ----------------\n    setTimeout(() => {\n      window.location.href = \"/sign-up\"\n    }, 1000)\n  } catch (err) {\n    let element = document.getElementsByClassName(\"graphql-user-delete-error\")\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n\nasync function editUser({\n  mascotId,\n  formData,\n  updateUser,\n  history,\n  notification,\n}) {\n  try {\n    const resp = await updateUser({\n      variables: {\n        username: formData.username,\n        email: formData.email,\n        password: formData.currentPassword,\n        newPassword: formData.newPassword,\n        mascot: mascotId,\n        allowEmailNotifications: notification,\n      },\n    })\n\n    if (resp && resp.data && resp.data.updateUser) {\n      document.getElementById(\"success-container-edit-user\").style.display =\n        \"block\"\n    } else {\n      throw new Error(\"Cannot save user changes.\")\n    }\n\n    // redirect ----------------\n    setTimeout(() => {\n      history.push(\"/profile\")\n    }, 1000)\n  } catch (err) {\n    let element = document.getElementsByClassName(\"graphql-user-edit-error\")\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n\nasync function handleMascot({ formData, updateMascot }) {\n  try {\n    const resp = await updateMascot({\n      variables: {\n        mascot: formData,\n      },\n    })\n\n    if (resp && resp.data && resp.data.updateMascot) {\n      document.getElementById(\"success-container-edit-mascot\").style.display =\n        \"block\"\n    } else {\n      throw new Error(\"Cannot save the selected mascot.\")\n    }\n\n    // redirect ----------------\n    setTimeout(() => {\n      window.location.href = \"/profile\"\n    }, 1000)\n  } catch (err) {\n    let element = document.getElementsByClassName(\n      \"graphql-user-mascot-edit-error\"\n    )\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// image ----------------\nimport Stan from \"../../images/mascots/iAmStan.svg\"\n\n// sub-components\nimport Image from \"../../components/image/Image\"\n\nfunction Imprint() {\n  // return ----------------\n  return (\n    <div className=\"imprint\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-m-10\">\n            <div className=\"imprint__headline\">\n              <h2>Imprint</h2>\n            </div>\n\n            <div className=\"imprint__team\">\n              <p>This is a MultiMedia Project 3 by Natasha, Tra and Daniela.</p>\n\n              <Image\n                path={Stan}\n                alt=\"a mascot is holding up a letter\"\n                className=\"imprint__team--mascot\"\n              />\n            </div>\n\n            <div className=\"imprint__address\">\n              <p>\n                Fachhochschule Salzburg GmbH\n                <br></br>\n                Urstein Süd 1<br></br>\n                A-5412\n                <br></br>\n                Puch/Salzburg Österreich\n              </p>\n            </div>\n\n            <div className=\"imprint__contact-details\">\n              <div className=\"imprint__contact-details--block\">\n                <p>\n                  <strong>T </strong>\n                  <a\n                    href=\"tel:+435022110\"\n                    className=\"imprint__contact-details--link\"\n                  >\n                    +43 50-2211-0\n                  </a>\n                </p>\n                <p>\n                  <strong>Mail </strong>\n                  <a\n                    href=\"mailto:medien@fh-salzburg.ac.at\"\n                    className=\"imprint__contact-details--link\"\n                  >\n                    stan.studyplan@gmail.com\n                  </a>\n                </p>\n              </div>\n            </div>\n\n            <div className=\"imprint__copyright\">\n              <p>© 2020 FH Salzburg</p>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Imprint\n","import React from \"react\"\n// --------------------------------------------------------------\n\nfunction DataPolicy() {\n  // return ----------------\n  return (\n    <div className=\"data-policy\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2>Data Privacy Policy</h2>\n            <p>Last updated January 05, 2020</p>\n            <br></br>\n            <br></br>\n          </div>\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <p>stan is a university project by FH Salzburg.</p>\n            <br></br>\n            <p>\n              Thank you for choosing to be part of our community at stan\n              (“Company”, “we”, “us”, or “our”). We are committed to protecting\n              your personal information and your right to privacy. If you have\n              any questions or concerns about our policy, or our practices with\n              regards to your personal information, please contact us at{\" \"}\n              <a href=\"mailto:stan.studyplan@gmail.com\">\n                stan.studyplan@gmail.com\n              </a>{\" \"}\n              . When you visit our website{\" \"}\n              <a href=\"https://stan-studyplan.herokuapp.com\">\n                stan-studyplan.herokuapp.com\n              </a>{\" \"}\n              , and use our services, you trust us with your personal\n              information. We take your privacy very seriously. In this privacy\n              policy, we seek to explain to you in the clearest way possible\n              what information we collect, how we use it and what rights you\n              have in relation to it. We hope you take some time to read through\n              it carefully, as it is important. If there are any terms in this\n              privacy policy that you do not agree with, please discontinue use\n              of our Sites and our services. This privacy policy applies to all\n              information collected through our website (such as\n              stan-studyplan.herokuapp.com), and/or any related services, sales,\n              marketing or events (we refer to them collectively in this privacy\n              policy as the \"Services\"). Please read this privacy policy\n              carefully as it will help you make informed decisions about\n              sharing your personal information with us.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>1. What information do we collect?</h3>\n            <br></br>\n            <h4>Personal information you disclose to us </h4>\n            <br></br>\n            <p>\n              In Short: We collect personal information that you provide to us.\n              We collect personal information that you voluntarily provide to us\n              when registering at the Services expressing an interest in\n              obtaining information about us or our products and services, when\n              participating in activities on the Services or otherwise\n              contacting us. The personal information that we collect depends on\n              the context of your interactions with us and the Services, the\n              choices you make and the products and features you use. The\n              personal information we collect can include the following:\n              Publicly Available Personal Information. We collect email\n              addresses; first name, maiden name, last name, and nickname; and\n              other similar data. Personal Information Provided by You. We\n              collect passwords; and other similar data. Social Media Login\n              Data. We may provide you with the option to register using social\n              media account details, like your Facebook, Twitter or other social\n              media account. If you choose to register in this way, we will\n              collect the Information described in the section called \"How do we\n              handle your social logins\" below. All personal information that\n              you provide to us must be true, complete and accurate, and you\n              must notify us of any changes to such personal information.\n            </p>\n            <br></br>\n            <br></br>\n            <h4>Information collected from other sources</h4>\n            <br></br>\n            <p>\n              In Short: We may collect limited data from public databases,\n              marketing partners, social media platforms, and other outside\n              sources. We may obtain information about your from other sources,\n              such as public databases, joint marketing partners, social media\n              platforms (such as Facebook), as well as from other third parties.\n              Examples of the information we receive from other sources include:\n              social media profile information (your name, gender, birthday,\n              email, current city, state and country, user identification\n              numbers for your contacts, profile picture URL, and any other\n              information that you choose to make public); marketing leads and\n              search results and links, including paid listings (such as\n              sponsored links). We will inform you about the source of\n              information and the type of information and the type of\n              information we have collected about you within a reasonable period\n              after obtaining the personal data, but at the latest within one\n              month.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>2. How do we use your information?</h3>\n            <br></br>\n            <p>\n              In Short: We process your information for purposes based on\n              legitimate business interests, the fulfillment of our contract\n              with you, compliance with our legal obligations, and/or your\n              consent. We use personal information collected via our Services\n              for a variety of business purposes described below. We process\n              your personal information for these purposes in reliance on our\n              legitimate business interests, in order to enter into or perform a\n              contract with you, with your consent, and/or for compliance with\n              our legal obligations. We indicate the specific processing grounds\n              we rely on next to each purpose listed below. We use the\n              information we collect or receive: To facilitate account creation\n              and logon process. If you choose to link your account with us to a\n              third party account (such as your Google or Facebook account), we\n              use the information you allowed us to collect from those third\n              parties to facilitate account creation and logon process for the\n              performance of the contract. See the section below headed \"How do\n              we handle your social logins\" for further information. To manage\n              user accounts. We may use your information for the purposes of\n              managing our account and keeping it in working order.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>3. Will your information be shared with anyone?</h3>\n            <br></br>\n            <p>\n              In Short: We only share information with your consent, to comply\n              with laws, to provide you with services, to protect your rights,\n              or to fulfill business obligations. We may process or share data\n              based on the following legal basis: Consent: We may process your\n              data if you have given us specific consent to use your personal\n              information in a specific purpose. Legitimate Interests: We may\n              process your data when it is reasonably necessary to achieve our\n              legitimate business interests. Performance of a Contract: Where we\n              have entered into a contract with you, we may process your\n              personal information to fulfill the terms of our contract. Legal\n              Obligations: We may disclose your information where we are legally\n              required to do so in order to comply with applicable law,\n              governmental requests, a judicial proceeding, court order, or\n              legal process, such as in response to a court order or a subpoena\n              (including in response to public authorities to meet national\n              security or law enforcement requirements). Vital Interests: We may\n              disclose your information where we believe it is necessary to\n              investigate, prevent, or take action regarding potential\n              violations of our policies, suspected fraud, situations involving\n              potential threats to the safety of any person and illegal\n              activities, or as evidence in litigation in which we are involved.\n              More specifically, we may need to process your data or share your\n              personal information in the following situations: Business\n              Transfers. We may share or transfer your information in connection\n              with, or during negotiations of, any merger, sale of company\n              assets, financing, or acquisition of all or a portion of our\n              business to another company. Third-Party Advertisers. We may use\n              third-party advertising companies to serve ads when you visit the\n              Services. These companies may use information about your visits to\n              our Website(s) and other websites that are contained in web\n              cookies and other tracking technologies in order to provide\n              advertisements about goods and services of interest to you.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>4. How do we handle your social logins?</h3>\n            <br></br>\n            <p>\n              In Short: If you choose to register or log in to our services\n              using a social media account, we may have access to certain\n              information about you. Our Services offer you the ability to\n              register and login using your third party social media account\n              details (like your Facebook or Twitter logins). Where you choose\n              to do this, we will receive certain profile information about you\n              from your social media provider. The profile Information we\n              receive may vary depending on the social media provider concerned,\n              but will often include your name, e-mail address, friends list,\n              profile picture as well as other information you choose to make\n              public. We will use the information we receive only for the\n              purposes that are described in this privacy policy or that are\n              otherwise made clear to you on the Services. Please note that we\n              do not control, and are not responsible for, other uses of your\n              personal information by your third party social media provider. We\n              recommend that you review their privacy policy to understand how\n              they collect, use and share your personal information, and how you\n              can set your privacy preferences on their sites and apps.\n            </p>\n            <br></br>\n            <p>\n              To log into stan, Google Login is an option provided. More\n              information about can be found\n              <a\n                href=\"https://support.google.com/accounts/answer/112802?co=GENIE.Platform%3DDesktop&hl=en\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here\n              </a>\n              .\n            </p>\n            <br></br>\n            <br></br>\n            <h3>5. How long do we keep your information?</h3>\n            <br></br>\n            <p>\n              In Short: We keep your information for as long as necessary to\n              fulfill the purposes outlined in this privacy policy unless\n              otherwise required by law. We will only keep your personal\n              information for as long as it is necessary for the purposes set\n              out in this privacy policy, unless a longer retention period is\n              required or permitted by law (such as tax, accounting or other\n              legal requirements). No purpose in this policy will require us\n              keeping your personal information for longer than the period of\n              time in which users have an account with us. When we have no\n              ongoing legitimate business need to process your personal\n              information, we will either delete or anonymize it, or, if this is\n              not possible (for example, because your personal information has\n              been stored in backup archives), then we will securely store your\n              personal information and isolate it from any further processing\n              until deletion is possible.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>6. How do we keep your information safe?</h3>\n            <br></br>\n            <p>\n              In Short: We aim to protect your personal information through a\n              system of organizational and technical security measures. We have\n              implemented appropriate technical and organizational security\n              measures designed to protect the security of any personal\n              information we process. However, please also remember that we\n              cannot guarantee that the internet itself is 100% secure. Although\n              we will do our best to protect your personal information,\n              transmission of personal information to and from our Services is\n              at your own risk. You should only access the services within a\n              secure environment.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>7. What are your privacy rights?</h3>\n            <br></br>\n            <p>\n              In Short: In some regions, such as the European Economic Area, you\n              have rights that allow you greater access to and control over your\n              personal information. You may review, change, or terminate your\n              account at any time. In some regions (like the European Economic\n              Area), you have certain rights under applicable data protection\n              laws. These may include the right (i) to request access and obtain\n              a copy of your personal information, (ii) to request rectification\n              or erasure; (iii) to restrict the processing of your personal\n              information; and (iv) if applicable, to data portability. In\n              certain circumstances, you may also have the right to object to\n              the processing of your personal information. To make such a\n              request, please use the contact details provided below. We will\n              consider and act upon any request in accordance with applicable\n              data protection laws. If we are relying on your consent to process\n              your personal information, you have the right to withdraw your\n              consent at any time. Please note however that this will not affect\n              the lawfulness of the processing before its withdrawal. If you are\n              resident in the European Economic Area and you believe we are\n              unlawfully processing your personal information, you also have the\n              right to complain to your local data protection supervisory\n              authority. You can find their contact details\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"http://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.htm\"\n              >\n                here\n              </a>\n              . If you have questions or comments about your privacy rights, you\n              may email us at{\" \"}\n              <a href=\"mailto:stan.studyplan@gmail.com\">\n                stan.studyplan@gmail.com\n              </a>{\" \"}\n              . Account Information If you would at any time like to review or\n              change the information in your account or terminate your account,\n              you can: Log into your account settings and update your user\n              account. Upon your request to terminate your account, we will\n              deactivate or delete your account and information from our active\n              databases. However, some information may be retained in our files\n              to prevent fraud, troubleshoot problems, assist with any\n              investigations, enforce our Terms of Use and/or comply with legal\n              requirements. Opting out of email marketing: You can unsubscribe\n              from our marketing email list at any time by clicking on the\n              unsubscribe link in the emails that we send or by contacting us\n              using the details provided below. You will then be removed from\n              the marketing email list – however, we will still need to send you\n              service-related emails that are necessary for the administration\n              and use of your account. To otherwise opt-out, you may: Contact us\n              using the contact information provided.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>8. Data breach</h3>\n            <br></br>\n            <p>\n              A privacy breach occurs when there is unauthorized access to or\n              collection, use, disclosure or disposal of personal information.\n              You will be notified about data breaches when stan believes you\n              are likely to be at risk or serious harm. For example, a data\n              breach may be likely to result in serious financial harm or harm\n              to your mental or physical well-being. In the event that stan\n              becomes aware of a security breach which has resulted or may\n              result in unauthorized access, use or disclosure of personal\n              information stan will promptly investigate the matter and notify\n              the applicable Supervisory Authority not later than 72 hours after\n              having become aware of it, unless the personal data breach is\n              unlikely to result in a risk to the rights and freedoms of natural\n              persons.\n            </p>\n            <br></br>\n            <br></br>\n            <h3> 9. Controls for do-not-track features</h3>\n            <br></br>\n            <p>\n              Most web browsers and some mobile operating systems and mobile\n              applications include a Do-Not-Track (“DNT”) feature or setting you\n              can activate to signal your privacy preference not to have data\n              about your online browsing activities monitored and collected. No\n              uniform technology standard for recognizing and implementing DNT\n              signals has been finalized. As such, we do not currently respond\n              to DNT browser signals or any other mechanism that automatically\n              communicates your choice not to be tracked online. If a standard\n              for online tracking is adopted that we must follow in the future,\n              we will inform you about that practice in a revised version of\n              this privacy policy.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>10. Do we make updates to this policy?</h3>\n            <br></br>\n            <p>\n              In Short: Yes, we will update this policy as necessary to stay\n              compliant with relevant laws. We may update this privacy policy\n              from time to time. The updated version will be indicated by an\n              updated “Revised” date and the updated version will be effective\n              as soon as it is accessible. If we make material changes to this\n              privacy policy, we may notify you either by prominently posting a\n              notice of such changes or by directly sending you a notification.\n              We encourage you to review this privacy policy frequently to be\n              informed of how we are protecting your information.\n            </p>\n            <br></br>\n            <br></br>\n            <h3>12. How can you contact us about this policy?</h3>\n            <br></br>\n            <p>\n              If you have questions or comments about this policy, you may email\n              us at{\" \"}\n              <a href=\"mailto:stan.studyplan@gmail.com\">\n                stan.studyplan@gmail.com\n              </a>{\" \"}\n              or by post to: stan Urstein Süd 1 Puch bei Hallein 5412 Austria{\" \"}\n            </p>\n            <br></br>\n            <br></br>\n            <h3>\n              How can you review, update, or delete the data we collect from\n              you?\n            </h3>\n            <br></br>\n            <p>\n              Based on the laws of some countries, you may have the right to\n              request access to the personal information we collect from you,\n              change that information, or delete it in some circumstances. To\n              request to review, update, or delete your personal information,\n              please submit a request form by clicking here. We will respond to\n              your request within 30 days.\n            </p>\n            <br></br>\n            <br></br>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataPolicy\n","import React from \"react\"\nimport { setAccessToken } from \"../../accessToken\"\nimport { Link } from \"react-router-dom\"\nimport { GoogleLogin } from \"react-google-login\"\n// --------------------------------------------------------------\n\n// mutation & queries\nimport { useForm } from \"react-hook-form\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { LOGIN_MUTATION, GOOGLE_LOGIN_MUTATION } from \"../../graphQL/mutations\"\n\n// components\nimport Input from \"../../components/input/Input\"\nimport Label from \"../../components/label/Label\"\nimport Button from \"../../components/button/Button\"\n\nfunction Login() {\n  // local-storage popup event ----------------\n  window.localStorage.setItem(\"popup-event\", false)\n\n  // google login ----------------\n  const successGoogle = async response => {\n    try {\n      const resp = await googleLogin({\n        variables: {\n          idToken: response.tokenId,\n        },\n      })\n\n      if (resp && resp.data && resp.data.googleLogin)\n        setAccessToken(resp.data.googleLogin)\n      else throw new Error(\"The google login failed\")\n\n      window.location.reload()\n    } catch (err) {\n      let element = document.getElementsByClassName(\"graphql-login-error\")\n\n      if (err.message === undefined || err.message === null) {\n        element[0].innerHTML = \"The google login failed.\"\n      } else {\n        element[0].innerHTML = err.message\n      }\n    }\n  }\n\n  const failureGoogle = response => {\n    let failureGoogleResponse = JSON.stringify(response.Qt.Ad)\n    let element = document.getElementsByClassName(\"graphql-login-error\")\n    element[0].innerHTML = failureGoogleResponse\n  }\n\n  // mutation ----------------\n  const [googleLogin] = useMutation(GOOGLE_LOGIN_MUTATION)\n  const [login] = useMutation(LOGIN_MUTATION)\n\n  // form specific ----------------\n  const { register, errors, handleSubmit } = useForm()\n  const onSubmit = async formData => {\n    await handleLogin({ formData, login })\n  }\n\n  // return ----------------\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"login__form box-content\">\n      <div className=\"row\">\n        <div className=\"error-handling-form\">\n          <p className=\"error graphql-login-error\"></p>\n        </div>\n        <div className=\"col-md-12 login__form__inner\">\n          <div className=\"login__form__element\">\n            <Label\n              for=\"email\"\n              text=\"E-Mail\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"email\"\n              id=\"email\"\n              label=\"email\"\n              placeholder=\"lucy@stan.io\"\n              required\n              ref={register({\n                required: true,\n                minLength: 1,\n                maxLength: 50,\n                pattern: /^([\\w_\\-\\.\\\"\\+\\!\\#\\$\\%\\&\\'\\*\\/\\=\\?\\^\\`\\{\\|\\}\\~ ]{1,64})@([\\w_\\-\\.]+)\\.([a-z]+)$/,\n              })}\n            />\n\n            {errors.email && errors.email.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.email && errors.email.type === \"minLength\" && (\n              <span className=\"error\">Minimum 1 character required</span>\n            )}\n            {errors.email && errors.email.type === \"maxLength\" && (\n              <span className=\"error\">Maximum 50 characters allowed</span>\n            )}\n            {errors.email && errors.email.type === \"pattern\" && (\n              <span className=\"error\">This is no valid e-mail address</span>\n            )}\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"password\"\n              text=\"Password\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"password\"\n              id=\"password\"\n              label=\"password\"\n              required\n              ref={register({\n                required: true,\n                minLength: 8,\n                maxLength: 30,\n                pattern: /^.{8,30}$/,\n              })}\n            />\n            {errors.password && errors.password.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.password && errors.password.type === \"minLength\" && (\n              <span className=\"error\">Minimum 8 characters required</span>\n            )}\n            {errors.password && errors.password.type === \"maxLength\" && (\n              <span className=\"error\">Maximum 30 characters allowed</span>\n            )}\n            {errors.password && errors.password.type === \"pattern\" && (\n              <span className=\"error\">\n                The password needs to be between 8 and 30 characters long\n              </span>\n            )}\n          </div>\n\n          <div className=\"login__form__buttons\">\n            <div className=\"login__form__buttons__button-right\">\n              <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                buttonText=\"Login\"\n                render={renderProps => (\n                  <button\n                    type=\"button\"\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    className=\"stan-btn-secondary\"\n                  >\n                    Google Login\n                  </button>\n                )}\n                onSuccess={successGoogle}\n                onFailure={failureGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </div>\n            <div className=\"login__form__buttons__button-left\">\n              <Button\n                type=\"submit\"\n                className=\"stan-btn-primary\"\n                variant=\"button\"\n                text=\"Login\"\n              />\n            </div>\n          </div>\n          <div className=\"login__form__redirect-signup\">\n            <p className=\"login__form__redirect-signup__text\">\n              not registered?\n            </p>{\" \"}\n            <Link to=\"/sign-up\" className=\"login__form__redirect-signup__link\">\n              sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default Login\n\nasync function handleLogin({ formData, login }) {\n  try {\n    const resp = await login({\n      variables: {\n        email: formData.email,\n        password: formData.password,\n      },\n    })\n    if (resp && resp.data && resp.data.login) {\n      setAccessToken(resp.data.login)\n    } else {\n      throw new Error(\"The login failed\")\n    }\n\n    // redirect ----------------\n    window.location.reload()\n  } catch (err) {\n    // error handling ----------------\n    let element = document.getElementsByClassName(\"graphql-login-error\")\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// context\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// components ----------------\nimport LoginForm from \"../../components/login/Login\"\nimport { Redirect } from \"react-router-dom\"\n\nfunction LoginPage() {\n  const currentUser = useCurrentUserValue()\n  if (currentUser !== undefined) {\n    return <Redirect to=\"/\" />\n  }\n\n  // return ----------------\n  return (\n    <div className=\"login\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10 login__headline\">\n            <h2 className=\"login__headline__heading\">Login</h2>\n            <p className=\"login__headline__sub-heading\">\n              You can log into your account via Google or your E-Mail address\n            </p>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-2\"></div>\n          <div className=\"col-md-8 login__form-container\">\n            <LoginForm />\n          </div>\n          <div className=\"col-md-2\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React, { useState } from \"react\"\nimport { setAccessToken } from \"../../accessToken\"\nimport { Link } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\n// --------------------------------------------------------------\n\n// mutation & queries ----------------\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { SIGNUP_MUTATION, GOOGLE_LOGIN_MUTATION } from \"../../graphQL/mutations\"\n// import { SUCCESS_SIGNUP } from \"../../graphQL/queries\"\n\n// google login ----------------\nimport { GoogleLogin } from \"react-google-login\"\n\n// components ----------------\nimport Input from \"../../components/input/Input\"\nimport Label from \"../../components/label/Label\"\nimport Button from \"../../components/button/Button\"\n\nfunction SignUp() {\n  // form ----------------\n  const { register, errors, handleSubmit } = useForm()\n\n  // state ----------------\n  const [notification, setNotification] = useState(false)\n\n  // mutation ----------------\n  const [signup] = useMutation(SIGNUP_MUTATION)\n  const [googleLogin] = useMutation(GOOGLE_LOGIN_MUTATION)\n\n  // google signup ----------------\n  const successGoogle = async response => {\n    try {\n      const resp = await googleLogin({\n        variables: {\n          idToken: response.tokenId,\n        },\n      })\n\n      if (resp && resp.data && resp.data.googleLogin)\n        setAccessToken(resp.data.googleLogin)\n      else throw new Error(\"The google login failed\")\n\n      window.location.reload()\n    } catch (err) {\n      let element = document.getElementsByClassName(\"graphql-sign-up-error\")\n\n      if (err.message === undefined || err.message === null) {\n        element[0].innerHTML = \"The google login failed.\"\n      } else {\n        element[0].innerHTML = err.message\n      }\n    }\n  }\n  const failureGoogle = response => {\n    let failureGoogleResponse = JSON.stringify(response.Qt.Ad)\n    let element = document.getElementsByClassName(\"graphql-sign-up-error\")\n    element[0].innerHTML = failureGoogleResponse\n  }\n\n  // form specific ----------------\n  const onSubmit = async formData => {\n    if (formData.password === formData.retype_password) {\n      document.getElementById(\"signup-error\").style.display = \"none\"\n\n      handleSignup({ formData, signup, notification })\n    } else {\n      document.getElementById(\"signup-error\").style.display = \"block\"\n    }\n  }\n\n  const handleNotification = () => {\n    setNotification(notification => !notification)\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"login__form box-content\">\n      <div className=\"row\">\n        <div className=\"col-md-12 login__form__inner\">\n          <div id=\"signup-error\">\n            <div className=\"error sign-up-error\">\n              <p>Please make sure your passwords match.</p>\n            </div>\n          </div>\n\n          <div className=\"error-handling-form\">\n            <p className=\"error graphql-sign-up-error\"></p>\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"username\"\n              text=\"Username\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"text\"\n              id=\"username\"\n              label=\"username\"\n              placeholder=\"Lucy\"\n              required\n              ref={register({\n                required: true,\n                minLength: 1,\n                maxLength: 30,\n                pattern: /^.{1,30}$/,\n              })}\n            />\n            {errors.username && errors.username.type === \"required\" ? (\n              <span className=\"error\">This field is required</span>\n            ) : null}\n            {errors.username && errors.username.type === \"minLength\" ? (\n              <span className=\"error\"> Minimum 8 character required</span>\n            ) : null}\n            {errors.username && errors.username.type === \"maxLength\" ? (\n              <span className=\"error\"> Maximum 30 characters allowed</span>\n            ) : null}\n            {errors.username && errors.username.type === \"pattern\" ? (\n              <span className=\"error\">\n                The username needs to be between 1 and 30 characters long\n              </span>\n            ) : null}\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"email\"\n              text=\"E-Mail\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"email\"\n              id=\"email\"\n              label=\"email\"\n              placeholder=\"lucy@stan.io\"\n              required\n              ref={register({\n                required: true,\n                minLength: 1,\n                maxLength: 50,\n                pattern: /^([\\w_\\-\\.\\\"\\+\\!\\#\\$\\%\\&\\'\\*\\/\\=\\?\\^\\`\\{\\|\\}\\~ ]{1,64})@([\\w_\\-\\.]+)\\.([a-z]+)$/,\n              })}\n            />\n            {errors.email && errors.email.type === \"required\" ? (\n              <span className=\"error\">This field is required</span>\n            ) : null}\n            {errors.email && errors.email.type === \"minLength\" ? (\n              <span className=\"error\"> Minimum 1 character required</span>\n            ) : null}\n            {errors.email && errors.email.type === \"maxLength\" ? (\n              <span className=\"error\"> Maximum 30 characters allowed</span>\n            ) : null}\n            {errors.email && errors.email.type === \"pattern\" ? (\n              <span className=\"error\">This is no valid e-mail address</span>\n            ) : null}\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"password\"\n              text=\"Password\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"password\"\n              id=\"password\"\n              label=\"password\"\n              required\n              ref={register({\n                required: true,\n                minLength: 8,\n                maxLength: 30,\n                pattern: /^.{8,30}$/,\n              })}\n            />\n            {errors.password && errors.password.type === \"required\" ? (\n              <span className=\"error\">This field is required</span>\n            ) : null}\n            {errors.password && errors.password.type === \"minLength\" ? (\n              <span className=\"error\"> Minimum 8 characters required</span>\n            ) : null}\n            {errors.password && errors.password.type === \"maxLength\" ? (\n              <span className=\"error\"> Maximum 30 characters allowed</span>\n            ) : null}\n            {errors.password && errors.password.type === \"pattern\" ? (\n              <span className=\"error\">\n                The password needs to be between 8 and 30 characters long\n              </span>\n            ) : null}\n          </div>\n\n          <div className=\"login__form__element\">\n            <Label\n              for=\"retype_password\"\n              text=\"Retype password\"\n              className=\"login__form__element__label input-required\"\n            ></Label>\n            <Input\n              className=\"login__form__element__input\"\n              type=\"password\"\n              id=\"retype_password\"\n              label=\"retype_password\"\n              required\n              ref={register({\n                required: true,\n                minLength: 8,\n                maxLength: 30,\n                pattern: /^.{8,30}$/,\n              })}\n            />\n            {errors.password && errors.password.type === \"required\" ? (\n              <span className=\"error\">This field is required</span>\n            ) : null}\n            {errors.password && errors.password.type === \"minLength\" ? (\n              <span className=\"error\"> Minimum 8 characters required</span>\n            ) : null}\n            {errors.password && errors.password.type === \"maxLength\" ? (\n              <span className=\"error\"> Maximum 30 characters allowed</span>\n            ) : null}\n            {errors.password && errors.password.type === \"pattern\" ? (\n              <span className=\"error\">\n                The password needs to be between 8 and 30 characters long\n              </span>\n            ) : null}\n          </div>\n\n          <div className=\"login__form__notifications\">\n            <label htmlFor=\"notification\" className=\"container\">\n              <input\n                type=\"checkbox\"\n                id=\"notification\"\n                name=\"notification\"\n                value=\"notification\"\n                onChange={handleNotification}\n              />\n              <span className=\"checkmark\"></span>\n              Allow email notifications when exam date is close (can be changed\n              at any time in the user profile)\n            </label>\n          </div>\n\n          <div className=\"login__form__buttons\">\n            <div className=\"login__form__buttons__button-right\">\n              <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                buttonText=\"Login\"\n                render={renderProps => (\n                  <button\n                    type=\"button\"\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    className=\"stan-btn-secondary\"\n                  >\n                    Google Login\n                  </button>\n                )}\n                onSuccess={successGoogle}\n                onFailure={failureGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </div>\n            <div className=\"login__form__buttons__button-left\">\n              <Button\n                type=\"submit\"\n                variant=\"button\"\n                text=\"Sign up\"\n                className=\"stan-btn-primary\"\n              />\n            </div>\n          </div>\n\n          <div className=\"login__form__redirect-signup\">\n            <p className=\"login__form__redirect-signup__text\">\n              already have an account?\n            </p>\n            <Link to=\"/login\" className=\"login__form__redirect-signup__link\">\n              login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default SignUp\n\nasync function handleSignup({ formData, signup, notification }) {\n  try {\n    console.log(notification)\n    const resp = await signup({\n      variables: {\n        username: formData.username,\n        email: formData.email,\n        password: formData.password,\n        mascot: 0,\n        allowEmailNotifications: notification,\n      },\n    })\n\n    if (resp && resp.data && resp.data.signup) {\n      setAccessToken(resp.data.signup)\n      console.log(\"saved access token after signup\")\n    } else {\n      throw new Error(\"The sign up failed\")\n    }\n\n    // redirect ----------------\n    window.localStorage.setItem(\"mascot-event\", true)\n    window.location.reload()\n  } catch (err) {\n    let element = document.getElementsByClassName(\"graphql-sign-up-error\")\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// components ----------------\nimport SignUpForm from \"../../components/signup/SignUp\"\nimport { Redirect } from \"react-router-dom\"\n\nfunction SignUpPage() {\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser !== undefined) {\n    return <Redirect to=\"/\" />\n  }\n\n  // return ----------------\n  return (\n    <div className=\"login\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10 login__headline\">\n            <h2 className=\"login__headline__heading\">Sign Up</h2>\n            <p className=\"login__headline__sub-heading\">\n              You can sign up via Google or with your E-Mail address\n            </p>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-lg-2\"></div>\n          <div className=\"col-lg-8 login__form-container\">\n            <SignUpForm />\n          </div>\n          <div className=\"col-lg-2\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUpPage\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst SubHeading = ({ text, className }) => {\n  // return ----------------\n  return <p className={className}>{text}</p>\n}\n\nexport default SubHeading\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Listing = ({ text, className }) => {\n  // return ----------------\n  return <li className={className}>{text}</li>\n}\n\nexport default Listing\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n// --------------------------------------------------------------\n\nconst EmptyDashboard = ({ heading, text, showBtn }) => {\n  let btnAddExam\n\n  if (showBtn == \"yes\") {\n    btnAddExam = (\n      <Link\n        to=\"/add-new\"\n        href=\"/add-new\"\n        className=\"empty-dashboard__btn stan-btn-primary\"\n      >\n        Add exam\n      </Link>\n    )\n  }\n  // return ----------------\n  return (\n    <div className=\"empty-dashboard box-content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h3 className=\"empty-dashboard__heading\">{heading}</h3>\n            <p className=\"empty-dashboard__text\">{text}</p>\n            {btnAddExam}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmptyDashboard\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst TodaySubject = ({ subject, durationTime, id, onClick, className }) => {\n  // return ----------------\n  return (\n    <button className={\"today-subject \" + className} id={id} onClick={onClick}>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <h4 className=\"today-subject__heading\">{subject}</h4>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\"today-subject__duration\">\n              <p className=\"today-subject__duration__text\">Duration</p>\n              <p className=\"today-subject__duration__time\">{durationTime}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </button>\n  )\n}\n\nexport default TodaySubject\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport TodaySubject from \"../../components/today-subject/TodaySubject\"\n\nfunction TodayGoals(props) {\n  // query data ----------------\n  let subject\n  let todaySubject\n  let duration\n  let durationTime\n  let hours\n  let minutes\n  let totalDuration = 0\n  let totalDurationTime\n  let hoursTotal\n  let minutesTotal\n\n  if (props.data && props.data.todaysChunkAndProgress.todaysChunks.length > 0) {\n    // filter only not completed entries\n    let filteredItems = props.data.todaysChunkAndProgress.todaysChunks.filter(\n      function(el) {\n        return el.completed == false\n      }\n    )\n    // map entries\n    todaySubject = filteredItems.map((element, index) => {\n      subject = element.exam.subject\n      duration = element.durationToday\n      totalDuration += duration\n\n      if (duration >= 60) {\n        hours = Math.floor(duration / 60)\n        minutes = Math.floor(duration) - hours * 60\n        durationTime = hours + \" hours \" + minutes + \" min\"\n\n        hoursTotal = Math.floor(totalDuration / 60)\n        minutesTotal = Math.floor(totalDuration) - hoursTotal * 60\n        totalDurationTime = hoursTotal + \"h \" + minutesTotal + \"m\"\n      } else {\n        minutes = duration\n        durationTime = minutes + \" min\"\n\n        minutesTotal = totalDuration\n        totalDurationTime = minutesTotal + \"m\"\n      }\n\n      return (\n        <TodaySubject\n          key={index}\n          subject={subject}\n          durationTime={durationTime}\n          onClick={e => {\n            e.preventDefault()\n            props.activeElementIndexChange(index)\n          }}\n          className={props.activeIndex === index ? \"active-subject\" : undefined}\n        ></TodaySubject>\n      )\n    })\n  }\n\n  // return ----------------\n  return (\n    <div className=\"today-goals box-content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"today-goals__container\">\n              <div className=\"today-goals__container__header\">\n                <h3 className=\"today-goals__container__header__heading\">\n                  Today's Goals\n                </h3>\n                <p className=\"today-goals__container__header__time\">\n                  {totalDurationTime}\n                </p>\n              </div>\n            </div>\n            {/* Subjects */}\n            {todaySubject}\n            {/* ---------------- */}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TodayGoals\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst Timeline = ({ heading, daysLeft, percentage, style }) => {\n  // return ----------------\n  return (\n    <dl className={\"timeline timeline-\" + style}>\n      <dt className=\"timeline__heading\">{heading}</dt>\n      <div className=\"timeline__bar\">\n        <dd\n          className={\"timeline__bar__percentage percentage-\" + percentage}\n        ></dd>\n        <p className=\"timeline__bar__text\">{daysLeft} left</p>\n      </div>\n    </dl>\n  )\n}\n\nexport default Timeline\n","import React from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport {\n  GET_EXAMS_QUERY,\n  GET_TODAYS_CHUNKS_AND_PROGRESS,\n  GET_CALENDAR_CHUNKS,\n} from \"../../graphQL/queries\"\nimport { UPDATE_CURRENT_PAGE_MUTATION } from \"../../graphQL/mutations\"\nimport { useForm } from \"react-hook-form\"\nimport { Link, useRouteMatch } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport Button from \"../../components/button/Button\"\nimport Label from \"../../components/label/Label\"\nimport Input from \"../../components/input/Input\"\nimport Timeline from \"../../components/timeline/Timeline\"\n\nfunction Today(props) {\n  // form specific ----------------\n  const { register, errors, handleSubmit, reset } = useForm()\n\n  let pagesStudiedForm\n\n  const onSubmit = async formData => {\n    try {\n      if (\n        (parseInt(formData.page_amount_studied) >= chunkGoalPage &&\n          parseInt(formData.page_amount_studied) < realCurrentPage) ||\n        parseInt(formData.page_amount_studied) < realCurrentPage\n      ) {\n        repetition++\n      }\n\n      if (repetition == 1) {\n        pagesStudiedForm = parseInt(formData.page_amount_studied) + 1\n      } else {\n        // (total pages * cycle) + current page in cycle + 1\n        pagesStudiedForm =\n          lastPage * (repetition - 1) +\n          parseInt(formData.page_amount_studied) +\n          1\n      }\n\n      const resp = await updatePage({\n        variables: {\n          page: parseInt(pagesStudiedForm),\n          examId:\n            props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex]\n              .exam.id,\n        },\n        refetchQueries: [\n          { query: GET_EXAMS_QUERY },\n          { query: GET_TODAYS_CHUNKS_AND_PROGRESS },\n          { query: GET_CALENDAR_CHUNKS },\n        ],\n      })\n\n      reset({}) // reset form data\n    } catch (err) {\n      // TODO: display error message\n      console.error(err.message)\n    }\n  }\n\n  const onSubmitAll = async formData => {\n    try {\n      const resp = await updatePage({\n        variables: {\n          page: chunkGoalPage + 1,\n          examId:\n            props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex]\n              .exam.id,\n        },\n        refetchQueries: [\n          { query: GET_EXAMS_QUERY },\n          { query: GET_TODAYS_CHUNKS_AND_PROGRESS },\n          { query: GET_CALENDAR_CHUNKS },\n        ],\n      })\n    } catch (err) {\n      // TODO: display error message\n      console.error(err.message)\n    }\n  }\n\n  // mutation ----------------\n  const [updatePage] = useMutation(UPDATE_CURRENT_PAGE_MUTATION)\n\n  // query data ----------------\n  let deadline\n  let subject\n  let currentPage\n  let realCurrentPage\n  let chunkGoalPage\n  let numberPagesToday\n  let lastPage\n  let startPage\n  let amountPagesWithRepeat\n  let repetition\n  let repetitionCycles\n  let repetitionCounter\n  let duration\n  let durationTime\n  let hours\n  let minutes\n  let daysLeft\n  let totalDays\n  let dayPercentage\n  let chunksTotal\n  let chunkPercentage\n  let noTime\n  let noTimeMessage\n\n  if (props.data && props.data.todaysChunkAndProgress.todaysChunks.length > 0) {\n    subject =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex].exam\n        .subject\n\n    deadline = props.data.todaysChunkAndProgress.todaysChunks[\n      props.activeIndex\n    ].exam.examDate.slice(0, 10)\n    deadline = deadline\n      .split(\"-\")\n      .reverse()\n      .join(\"/\")\n\n    currentPage =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex].exam\n        .currentPage\n    amountPagesWithRepeat =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex]\n        .numberPagesWithRepeat\n    lastPage =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex].exam\n        .numberPages\n    realCurrentPage = currentPage % lastPage\n\n    startPage =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex]\n        .startPage\n\n    numberPagesToday =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex]\n        .numberPagesToday\n\n    chunkGoalPage = ((currentPage + numberPagesToday) % lastPage) - 1\n\n    // to display last page correctly\n    if (chunkGoalPage == -1) {\n      chunkGoalPage = lastPage\n    } else if (chunkGoalPage == 0) {\n      chunkGoalPage = 1\n    }\n\n    duration =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex]\n        .durationToday\n    if (duration >= 60) {\n      hours = Math.floor(duration / 60)\n      minutes = Math.floor(duration) - hours * 60\n      durationTime = hours + \" hours \" + minutes + \" min\"\n    } else {\n      minutes = duration\n      durationTime = minutes + \" min\"\n    }\n\n    // noTime = props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex].notEnoughTime\n    if (duration > 1440) {\n      noTimeMessage =\n        \"Info: You need to study faster to finish all pages until the exam!\"\n    }\n\n    repetitionCycles =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex].exam\n        .timesRepeat\n    repetition = 1\n    repetitionCounter = Math.floor(currentPage / lastPage) + 1\n    if (repetitionCounter <= repetitionCycles) {\n      repetition = repetitionCounter\n    } else {\n      repetition = repetitionCycles\n    }\n\n    daysLeft =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex].daysLeft\n    totalDays =\n      props.data.todaysChunkAndProgress.todaysChunks[props.activeIndex]\n        .totalNumberDays\n    dayPercentage = 100 - Math.round((daysLeft / totalDays) * 100)\n\n    // calculation for chunks\n    // chunksTotal = totalDays\n    // chunkPercentage = 100 - Math.round((daysLeft / chunksTotal) * 100)\n\n    // calculation for how many pages are left\n    chunksTotal = lastPage * (repetitionCycles + 1) - currentPage\n    chunkPercentage = Math.round((lastPage / chunksTotal) * 100)\n  }\n\n  // return ----------------\n  return (\n    <div className=\"today box-content\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"today__container\">\n              <div className=\"today__container__header\">\n                <h3 className=\"today__container__header__heading\">Today</h3>\n                <div className=\"today__container__header__deadline\">\n                  <p className=\"today__container__header__deadline__text\">\n                    deadline\n                  </p>\n                  <p className=\"today__container__header__deadline__date\">\n                    {deadline}\n                  </p>\n                </div>\n              </div>\n              <div className=\"today__container__content\">\n                <div className=\"today__container__content__layout\">\n                  <div className=\"today__container__content__subject\">\n                    <p className=\"today__container__content__label\">Subject</p>\n                    <p className=\"today__container__content__text--big\">\n                      {subject}\n                    </p>\n                  </div>\n                  <div className=\"today__container__content__warning\">\n                    <p className=\"today__container__content__text--warning\">\n                      {noTimeMessage}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"today__container__content__layout\">\n                  <div className=\"today__container__content__details\">\n                    <div className=\"today__container__content__details__goal\">\n                      <p className=\"today__container__content__label\">Goal:</p>\n                      <p className=\"today__container__content__text\">\n                        page {realCurrentPage} to{\" \"}\n                        {startPage + numberPagesToday - 1}\n                      </p>\n                    </div>\n                    <div className=\"today__container__content__details__duration\">\n                      <p className=\"today__container__content__label\">\n                        Duration:\n                      </p>\n                      <p className=\"today__container__content__text\">\n                        {durationTime}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"today__container__content__details\">\n                    <div className=\"today__container__content__details__total-pages\">\n                      <p className=\"today__container__content__label\">\n                        Total pages:\n                      </p>\n                      <p className=\"today__container__content__text\">\n                        {realCurrentPage} / {lastPage}\n                      </p>\n                    </div>\n\n                    <div className=\"today__container__content__details__repetition\">\n                      <p className=\"today__container__content__label\">\n                        Repetition cycle:\n                      </p>\n                      <p className=\"today__container__content__text\">\n                        {repetition} / {repetitionCycles}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                {/* days left */}\n                <div className=\"today__container__days-left\">\n                  <Timeline\n                    heading=\"Days until deadline\"\n                    daysLeft={daysLeft}\n                    percentage={dayPercentage}\n                    style=\"bar\"\n                  ></Timeline>\n                </div>\n                {/* chunks left */}\n                <div className=\"today__container__chunks-left\">\n                  <Timeline\n                    heading=\"Pages left to study\"\n                    daysLeft={chunksTotal}\n                    percentage={chunkPercentage}\n                    style=\"chunks\"\n                  ></Timeline>\n                </div>\n\n                {/* buttons */}\n                <div className=\"today__container__buttons\">\n                  {/* open notes or link */}\n                  <Link\n                    to={`/exams/${props.data.todaysChunkAndProgress.todaysChunks[\n                      props.activeIndex\n                    ].exam.subject\n                      .toLowerCase()\n                      .replace(/ /g, \"-\")}?id=${\n                      props.data.todaysChunkAndProgress.todaysChunks[\n                        props.activeIndex\n                      ].exam.id\n                    }`}\n                    className=\"today__container__buttons__open\"\n                  >\n                    open notes\n                  </Link>\n\n                  <div className=\"today__container__buttons__submit\">\n                    {/* pages done */}\n                    <form\n                      onSubmit={handleSubmit(onSubmit)}\n                      id=\"study-chunk\"\n                      className=\"today__container__buttons__submit__form\"\n                    >\n                      <div className=\"today__container__buttons__submit__form__elements-container\">\n                        <div className=\"today__container__buttons__submit__form__elements-container__elements\">\n                          <Label\n                            for=\"page\"\n                            text=\"studied up to page:\"\n                            className=\"today__container__buttons__submit__form__elements-container__elements__label\"\n                          ></Label>\n                          <Input\n                            className=\"today__container__buttons__submit__form__elements-container__elements__input\"\n                            type=\"number\"\n                            min=\"0\"\n                            id=\"page\"\n                            label=\"page_amount_studied\"\n                            placeholder={realCurrentPage}\n                            ref={register({\n                              required: true,\n                              min: startPage,\n                              max: lastPage,\n                            })}\n                          />\n                        </div>\n                        <Button\n                          className=\"today__container__buttons__submit__form__btn stan-btn-secondary\"\n                          variant=\"button\"\n                          text=\"save\"\n                        />\n                      </div>\n                      {errors.page_amount_studied &&\n                        errors.page_amount_studied.type === \"required\" && (\n                          <span className=\"error\">\n                            Please enter a page number\n                          </span>\n                        )}\n                      {errors.page_amount_studied &&\n                        errors.page_amount_studied.type === \"max\" && (\n                          <span className=\"error\">\n                            The maximum is your last page: {lastPage}\n                          </span>\n                        )}\n                      {errors.page_amount_studied &&\n                        errors.page_amount_studied.type === \"min\" && (\n                          <span className=\"error\">\n                            The minimum page is today's start page\n                          </span>\n                        )}\n                    </form>\n                    <form\n                      onSubmit={onSubmitAll}\n                      id=\"study-chunk-all\"\n                      className=\"today__container__buttons__submit__form-all\"\n                    >\n                      {/* all done */}\n                      <div className=\"today__container__buttons__submit__all-done\">\n                        <Button\n                          className=\"today__container__buttons__submit__all-done__btn stan-btn-primary\"\n                          variant=\"button\"\n                          text=\"goal studied\"\n                        />\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Today\n","import React from \"react\"\nimport { useForm } from \"react-hook-form\"\n// --------------------------------------------------------------\n\n// mutation & queries ----------------\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { UPDATE_MASCOT_MUTATION } from \"../../graphQL/mutations\"\n\n// libraries\nimport { Carousel } from \"react-responsive-carousel\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\n// components ----------------\nimport VeryHappyMascot from \"../../images/mascots/user-mascot/0-0.svg\"\nimport VeryHappyGirlyMascot from \"../../images/mascots/user-mascot/1-0.svg\"\nimport VeryHappyCleverMascot from \"../../images/mascots/user-mascot/2-0.svg\"\n\n// sub components ----------------\nimport Button from \"../button/Button\"\nimport Image from \"../image/Image\"\n\nfunction Mascots() {\n  const { handleSubmit } = useForm()\n\n  // mutation ----------------\n  const [updateMascot] = useMutation(UPDATE_MASCOT_MUTATION)\n  const mascotStore = { mascot: 0 }\n\n  // form specific ----------------\n  const onSubmit = async data => {\n    data = mascotStore.mascot\n    handleMascot({ data, updateMascot })\n  }\n\n  // functions ----------------\n  const handleMascotCallback = id => {\n    mascotStore.mascot = id\n  }\n\n  return (\n    <div className=\"mascots\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\"></div>\n          <div className=\"col-lg-10\">\n            <div className=\"mascots__heading\">\n              <h2>One more thing...</h2>\n            </div>\n          </div>\n\n          <div className=\"col-lg-2\"></div>\n          <div className=\"col-lg-7\">\n            <div className=\"mascots__inner\">\n              <form\n                onSubmit={handleSubmit(onSubmit)}\n                className=\"mascots__inner--form box-content\"\n              >\n                <div className=\"mascots__inner--form__sub-heading\">\n                  <p>\n                    Choose your mascot, <br />\n                    you can change it afterwards in your profile\n                  </p>\n                </div>\n\n                <div className=\"mascots__inner--form__carousel\">\n                  <Carousel\n                    showStatus={false}\n                    showThumbs={false}\n                    useKeyboardArrows={true}\n                    onChange={handleMascotCallback}\n                    mobile={true}\n                  >\n                    <Image path={VeryHappyMascot} text=\"a very happy mascot\" />\n                    <Image\n                      path={VeryHappyGirlyMascot}\n                      text=\"a very happy girly mascot\"\n                    />\n                    <Image\n                      path={VeryHappyCleverMascot}\n                      text=\"a very happy clever mascot\"\n                    />\n                  </Carousel>\n\n                  <div className=\"mascots__inner--form__button\">\n                    <Button\n                      variant=\"button\"\n                      text=\"Save\"\n                      className=\"stan-btn-primary\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"col-lg-3\"></div>\n\n          <div className=\"col-md-12\">\n            <div className=\"error-handling-form\">\n              <p className=\"graphql-mascots-error\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Mascots\n\nasync function handleMascot({ data, updateMascot }) {\n  try {\n    const resp = await updateMascot({\n      variables: {\n        mascot: data,\n      },\n    })\n\n    if (resp && resp.data && resp.data.updateMascot) {\n      console.log(\"success: saved new mascot\")\n    } else {\n      throw new Error()\n    }\n\n    // redirect ----------------\n    window.localStorage.setItem(\"mascot-event\", false)\n    window.location.reload()\n  } catch (err) {\n    let element = document.getElementsByClassName(\"graphql-mascots-error\")\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { CurrentUserContext } from \"../../components/STAN/STAN\"\n\n// query ----------------\nimport { GET_TODAYS_CHUNKS_PROGRESS } from \"../../graphQL/queries\"\n\n// sub-components ----------------\nimport Image from \"../../components/image/Image\"\nimport Loading from \"../../components/loading/Loading\"\nimport { currentMood } from \"../../pages/user-account-page/UserAccountPage\"\n\n// motivational sayings ----------------\nimport motivationalSayings from \"./json/motivational-sayings.json\"\n\n// libraries ----------------\nimport { Carousel } from \"react-responsive-carousel\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport QueryError from \"../error/Error\"\n\n// random number ----------------\nconst random = Math.floor(Math.random() * 3)\n\nconst CurrentState = () => {\n  // query ----------------\n  const { data, loading, error } = useQuery(GET_TODAYS_CHUNKS_PROGRESS)\n\n  // variables ----------------\n  let mood = \"okay\"\n  let motivation\n\n  // error handling ----------------\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n  if (data) {\n    mood = currentMood(data.todaysChunksProgress)\n  }\n\n  motivationalSayings.forEach(element => {\n    if (mood === element.mood) {\n      if (element.id === random) {\n        motivation = element.motivation\n      }\n    }\n  })\n\n  // return ----------------\n  return (\n    <div className=\"current-state\">\n      <Carousel\n        showStatus={false}\n        showThumbs={false}\n        infiniteLoop={true}\n        showIndicators={false}\n        autoPlay={true}\n        showArrows={false}\n        interval={30000}\n      >\n        <CurrentUserContext.Consumer>\n          {currentUser => (\n            <Image\n              path={require(`../../images/mascots/${\n                currentUser.mascot\n              }-${mood.replace(/ /g, \"\")}-0.svg`)}\n              text=\"\"\n            />\n          )}\n        </CurrentUserContext.Consumer>\n\n        <CurrentUserContext.Consumer>\n          {currentUser => (\n            <Image\n              path={require(`../../images/mascots/${\n                currentUser.mascot\n              }-${mood.replace(/ /g, \"\")}-1.svg`)}\n              text=\"\"\n            />\n          )}\n        </CurrentUserContext.Consumer>\n\n        <CurrentUserContext.Consumer>\n          {currentUser => (\n            <Image\n              path={require(`../../images/mascots/${\n                currentUser.mascot\n              }-${mood.replace(/ /g, \"\")}-2.svg`)}\n              text=\"\"\n            />\n          )}\n        </CurrentUserContext.Consumer>\n      </Carousel>\n\n      <div className=\"current-state__motivation\">\n        <p>{motivation}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default CurrentState\n","import React, { useState } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport {\n  CurrentUserContext,\n  useCurrentUserValue,\n} from \"../../components/STAN/STAN\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { GET_TODAYS_CHUNKS_AND_PROGRESS } from \"../../graphQL/queries\"\n// --------------------------------------------------------------\n\n// components ----------------\nimport EmptyDashboard from \"../../components/empty-dashboard/EmptyDashboard\"\nimport TodayGoals from \"../../components/today-goals/TodayGoals\"\nimport Today from \"../../components/today/Today\"\nimport Mascots from \"../../components/mascots/Mascots\"\nimport QueryError from \"../../components/error/Error\"\nimport Loading from \"../../components/loading/Loading\"\nimport CurrentState from \"../../components/current-state/CurrentState\"\nimport { GOOGLE_URL_AUTH_CODE_MUTATION } from \"../../graphQL/mutations\"\n\nfunction Dashboard() {\n  // query ----------------\n  const { loading, error, data } = useQuery(GET_TODAYS_CHUNKS_AND_PROGRESS)\n  const [activeElementIndex, setActiveElementIndex] = useState(0)\n\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  // mascot trigger ----------------\n  const mascot = window.localStorage.getItem(\"mascot-event\")\n  if (mascot === \"true\") {\n    return <Mascots />\n  }\n\n  // error handling ----------------\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n\n  // query data ----------------\n  let usersToDos\n\n  if (data && data.todaysChunkAndProgress.todaysChunks.length > 0) {\n    // filter only not completed entries\n    let filteredItems = data.todaysChunkAndProgress.todaysChunks.filter(\n      function(el) {\n        return el.completed == false\n      }\n    )\n    if (filteredItems.length > 0) {\n      usersToDos = (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {/* ------ if tasks open ------*/}\n            <div className=\"col-xl-1\"></div>\n            <div className=\"col-xl-3\">\n              {/* Today Goals*/}\n              <TodayGoals\n                activeElementIndexChange={index => {\n                  setActiveElementIndex(index)\n                }}\n                activeIndex={activeElementIndex}\n                data={data}\n              ></TodayGoals>\n            </div>\n            <div className=\"col-xl-6 today-component-container\">\n              {/* Today */}\n              <Today activeIndex={activeElementIndex} data={data}></Today>\n            </div>\n            <div className=\"col-xl-2\">{/* Today Progress */}</div>\n          </div>\n        </div>\n      )\n    } else {\n      usersToDos = (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            {/* ------ no tasks ------*/}\n            <div className=\"col-md-1\"></div>\n            <div className=\"col-md-7\">\n              <EmptyDashboard\n                heading=\"No open tasks\"\n                text=\"You finished studying for today, come back tomorrow\"\n                showBtn=\"no\"\n              ></EmptyDashboard>\n            </div>\n            <div className=\"col-md-4\"></div>\n          </div>\n        </div>\n      )\n    }\n  } else {\n    usersToDos = (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          {/* ------ no tasks ------*/}\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-7\">\n            <EmptyDashboard\n              heading=\"No open tasks\"\n              text=\"Are you sure there are no exams you need to study for?\"\n              showBtn=\"yes\"\n            ></EmptyDashboard>\n          </div>\n          <div className=\"col-md-4\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  // return ----------------\n  return (\n    <div className=\"dashboard-page\">\n      <div className=\"container-fluid\">\n        <div className=\"row dashboard-header\">\n          <div className=\"col-xl-1\"></div>\n          <div className=\"col-xl-7\">\n            <CurrentUserContext.Consumer>\n              {currentUser => (\n                <h2 className=\"dashboard-page__heading\">\n                  Hello {currentUser.username}\n                </h2>\n              )}\n            </CurrentUserContext.Consumer>\n            <p className=\"dashboard-page__current-date\">{getCurrentDate()}</p>\n          </div>\n          {/* Mascot */}\n          <div className=\"col-xl-4\">\n            <CurrentState />\n          </div>\n        </div>\n      </div>\n      {/* dashboard content */}\n      {usersToDos}\n      {/* ---------------- */}\n    </div>\n  )\n}\n\nexport default Dashboard\n\nfunction getCurrentDate() {\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ]\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ]\n\n  let today = new Date()\n  let date =\n    days[today.getDay()] +\n    \", \" +\n    today.getDate() +\n    \". \" +\n    monthNames[today.getMonth() + 1] +\n    \" \" +\n    today.getFullYear()\n\n  return date\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// components ----------------\nimport SubHeading from \"../../components/sub-heading/SubHeading\"\nimport Listing from \"../../components/listing/Listing\"\nimport Dashboard from \"../dashboard-page/DashboardPage\"\n\n// libraries ----------------\nimport Particles from \"react-particles-js\"\n\nfunction Home() {\n  // redirects ----------------\n  let currentUser = useCurrentUserValue()\n  if (currentUser !== undefined) {\n    return <Dashboard />\n  }\n\n  // return ----------------\n  return (\n    <div className=\"home\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2 className=\"home__heading\">\n              Organize your <br></br>Study Plan\n            </h2>\n            <SubHeading className=\"sub-heading\" text=\"Easy . Fast . Online\" />\n\n            <p className=\"home__text\">\n              Students like you can add and organize their learning material for\n              exams with Stan! Stan supports you in dividing up your tasks for\n              each subject. Deadlines, as well as calculated learning chunks,\n              are visualized so you can keep track of your progress and counter\n              procrastination.\n            </p>\n\n            <div className=\"home__list\">\n              <Listing\n                className=\"list-style\"\n                text=\"increase your learning motivation\"\n              />\n              <Listing\n                className=\"list-style\"\n                text=\"decrease your procrastination\"\n              />\n            </div>\n\n            <div className=\"home__btn\">\n              <Link to=\"/sign-up\" className=\"stan-btn-double\">\n                Start now\n              </Link>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <Particles\n            params={{\n              particles: {\n                number: {\n                  value: 160,\n                  density: {\n                    enable: false,\n                  },\n                },\n                color: {\n                  value: \"#0000\",\n                },\n                size: {\n                  value: 3,\n                  random: true,\n                  anim: {\n                    speed: 4,\n                    size_min: 0.3,\n                  },\n                },\n                line_linked: {\n                  enable: false,\n                },\n                move: {\n                  random: true,\n                  speed: 1,\n                  direction: \"top\",\n                  out_mode: \"out\",\n                },\n              },\n              interactivity: {\n                events: {\n                  onhover: {\n                    enable: true,\n                    mode: \"bubble\",\n                  },\n                  onclick: {\n                    enable: true,\n                    mode: \"repulse\",\n                  },\n                },\n                modes: {\n                  bubble: {\n                    distance: 250,\n                    duration: 2,\n                    size: 0,\n                    opacity: 0,\n                  },\n                  repulse: {\n                    distance: 400,\n                    duration: 4,\n                  },\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// sub-components ----------------\nimport Image from \"../../components/image/Image\"\nimport SubHeading from \"../../components/sub-heading/SubHeading\"\n\n// images ----------------\nimport Pic1 from \"../../images/desk1.png\"\nimport Pic2 from \"../../images/desk2.png\"\n\nfunction About() {\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser !== undefined) {\n    return <Redirect to=\"/\" />\n  }\n\n  // return ----------------\n  return (\n    <div className=\"about\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <h2 className=\"about__heading\">Who is stan?</h2>\n            <SubHeading className=\"sub-heading\" text=\"We will explain\" />\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"container-fluid text-image-module\">\n              <div className=\"row\">\n                <div className=\"col-xl-6\">\n                  <div className=\"about__content\">\n                    <h3 className=\"list-style\">your online study plan</h3>\n                    <p className=\"about__content__text\">\n                      Students like you can easily add and organize their\n                      learning material for exams with Stan. Simply add your\n                      exam subjects in your stan dashboard and prioritize them.\n                      Stan will then automatically calculate your personal\n                      learning chunks.\n                    </p>\n                    <div className=\"about__content__btn\">\n                      <Link to=\"/sign-up\" className=\"stan-btn-double\">\n                        Join stan\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-6\">\n                  <Image\n                    path={Pic1}\n                    alt=\"Desk with devices and cup of coffee\"\n                    className=\"about__img\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"container-fluid text-image-module text-image-module--reverse\">\n              <div className=\"row\">\n                <div className=\"col-xl-6\">\n                  <div className=\"about__content\">\n                    <h3 className=\"list-style\">fight procrastination</h3>\n                    <p className=\"about__content__text\">\n                      Students like you can easily add and organize their\n                      learning material for exams with Stan. Simply add your\n                      exam subjects in your stan dashboard and prioritize them.\n                      Stan will then automatically calculate your personal\n                      learning chunks.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"col-xl-6\">\n                  <Image\n                    path={Pic2}\n                    alt=\"Desk with devices and cup of coffee\"\n                    className=\"about__img\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import React from \"react\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../STAN/STAN\"\nimport { Redirect } from \"react-router-dom\"\n\nfunction LoginPopUp() {\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (\n    currentUser !== undefined ||\n    window.localStorage.getItem(\"popup-event\") === \"false\"\n  ) {\n    return <Redirect to=\"/\" />\n  }\n  // return ----------------\n  return (\n    <div className=\"popup\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-4\">\n            <div className=\"popup__inner box-content\">\n              <div className=\"popup__inner--headline\">\n                <h4>Not Logged In</h4>\n              </div>\n              <div className=\"popup__inner--content\">\n                <div className=\"text\">\n                  <p>Please log in to continue.</p>\n                </div>\n                <div className=\"login-btn\">\n                  <a href=\"/login\" className=\"stan-btn-secondary\">\n                    Login\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPopUp\n","import React, { useEffect } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Redirect, useHistory } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// queries & mutation ----------------\nimport { GET_EXAM_QUERY, GET_EXAMS_QUERY } from \"../../graphQL/queries\"\nimport { UPDATE_EXAM_MUTATION } from \"../../graphQL/mutations\"\n\n// sub-components ----------------\nimport Label from \"../../components/label/Label\"\nimport Button from \"../../components/button/Button\"\nimport QueryError from \"../../components/error/Error\"\nimport Loading from \"../../components/loading/Loading\"\n\nconst ExamDetailsEdit = ({ examId }) => {\n  // variables ----------------\n  let defaultValues\n\n  // query ----------------\n  const { loading, error, data } = useQuery(GET_EXAM_QUERY, {\n    variables: { id: examId },\n  })\n\n  if (data && data.exam) {\n    defaultValues = {\n      subject: data.exam.subject,\n      examDate: new Date(data.exam.examDate).toISOString().substr(0, 10),\n      startDate: new Date(data.exam.startDate).toISOString().substr(0, 10),\n      numberPages: data.exam.numberPages,\n      timePerPage: data.exam.timePerPage,\n      timesRepeat: data.exam.timesRepeat,\n      currentPage: data.exam.currentPage,\n      startPage: data.exam.startPage,\n      notes: data.exam.notes,\n      pdfLink: data.exam.pdfLink,\n    }\n  }\n\n  // set default variables in form and make it editable ----------------\n  const { register, errors, watch, setValue, handleSubmit } = useForm({\n    defaultValues,\n  })\n\n  const {\n    subject,\n    examDate,\n    startDate,\n    numberPages,\n    startPage,\n    currentPage,\n    timePerPage,\n    timesRepeat,\n    notes,\n    pdfLink,\n  } = watch()\n\n  useEffect(() => {\n    register({ exam: \"subject\" })\n    register({ exam: \"examDate\" })\n    register({ exam: \"startDate\" })\n    register({ exam: \"numberPages\" })\n    register({ exam: \"startPage\" })\n    register({ exam: \"currentPage\" })\n    register({ exam: \"timePerPage\" })\n    register({ exam: \"timesRepeat\" })\n    register({ exam: \"notes\" })\n    register({ exam: \"pdfLink\" })\n  }, [register])\n\n  // mutation ----------------\n  const [updateExam] = useMutation(UPDATE_EXAM_MUTATION, {\n    refetchQueries: [{ query: GET_EXAMS_QUERY }],\n  })\n\n  // redirects ----------------\n  let history = useHistory()\n  const currentUser = useCurrentUserValue()\n  if (currentUser === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n\n  // error handling ----------------\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n\n  // functions ----------------\n  const handleChange = (exam, e) => {\n    e.persist()\n    setValue(exam, e.target.value)\n  }\n\n  const onSubmit = data => {\n    handleExam({ examId, data, updateExam, history })\n  }\n\n  // return ----------------\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n      <div className=\"row\">\n        <div className=\"col-md-6 form__left\">\n          <div className=\"form__element\">\n            <Label\n              htmlFor=\"subject\"\n              text=\"Subject\"\n              className=\"form__element__label input-required\"\n            />\n            <input\n              className=\"form__element__input\"\n              type=\"text\"\n              id=\"subject\"\n              label=\"exam_subject\"\n              value={subject}\n              name=\"subject\"\n              onChange={handleChange.bind(null, \"subject\")}\n              required\n              ref={register({\n                required: true,\n                minLength: 1,\n                maxLength: 20,\n              })}\n            />\n            {errors.exam_subject && errors.exam_subject.type === \"required\" && (\n              <span className=\"error\">This field is required</span>\n            )}\n            {errors.exam_subject &&\n              errors.exam_subject.type === \"minLength\" && (\n                <span className=\"error\"> Minimum 1 character required</span>\n              )}\n            {errors.exam_subject &&\n              errors.exam_subject.type === \"maxLength\" && (\n                <span className=\"error\"> Maximum 20 characters allowed</span>\n              )}\n          </div>\n          <div className=\"form__container form__container--numbers\">\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"exam-date\"\n                text=\"Exam date\"\n                className=\"form__element__label input-required\"\n              />\n              <input\n                className=\"form__element__input\"\n                type=\"date\"\n                id=\"exam-date\"\n                label=\"exam_date\"\n                name=\"examDate\"\n                value={examDate}\n                onChange={handleChange.bind(null, \"examDate\")}\n                required\n                ref={register({\n                  required: true,\n                })}\n              />\n              {errors.exam_date && errors.exam_date.type === \"required\" && (\n                <span className=\"error\">This field is required</span>\n              )}\n            </div>\n\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"study-start-date\"\n                text=\"Start learning on\"\n                className=\"form__element__label input-required\"\n              />\n              <input\n                className=\"form__element__input\"\n                type=\"date\"\n                id=\"study-start-date\"\n                label=\"exam_start_date\"\n                name=\"startDate\"\n                onChange={handleChange.bind(null, \"startDate\")}\n                value={startDate}\n                required\n                ref={register({\n                  required: false,\n                })}\n              />\n            </div>\n          </div>\n          <div className=\"form__container form__container--numbers\">\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"page-amount\"\n                text=\"Amount of pages\"\n                className=\"form__element__label input-required\"\n              />\n              <input\n                className=\"form__element__input\"\n                type=\"number\"\n                min=\"0\"\n                id=\"page-amount\"\n                label=\"exam_page_amount\"\n                name=\"numberPages\"\n                onChange={handleChange.bind(null, \"numberPages\")}\n                value={numberPages}\n                required\n                ref={register({\n                  required: true,\n                  min: 1,\n                  max: 10000,\n                })}\n              />\n              {errors.exam_page_amount &&\n                errors.exam_page_amount.type === \"required\" && (\n                  <span className=\"error\">This field is required</span>\n                )}\n              {errors.exam_page_amount &&\n                errors.exam_page_amount.type === \"max\" && (\n                  <span className=\"error\">The maximum is 10.000</span>\n                )}\n              {errors.exam_page_amount &&\n                errors.exam_page_amount.type === \"min\" && (\n                  <span className=\"error\">\n                    Only positive numbers are allowed\n                  </span>\n                )}\n            </div>\n\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"startPage\"\n                text=\"Start page\"\n                className=\"form__element__label\"\n              />\n              <input\n                className=\"form__element__input\"\n                type=\"number\"\n                min=\"0\"\n                id=\"startPage\"\n                label=\"exam_start_page\"\n                name=\"startPage\"\n                onChange={handleChange.bind(null, \"startPage\")}\n                value={startPage}\n                ref={register({\n                  min: 1,\n                  max: 10000,\n                })}\n              />\n              {errors.exam_page_amount &&\n                errors.exam_page_amount.type === \"max\" && (\n                  <span className=\"error\">The maximum is 10.000</span>\n                )}\n              {errors.exam_page_amount &&\n                errors.exam_page_amount.type === \"min\" && (\n                  <span className=\"error\">\n                    Only positive numbers are allowed\n                  </span>\n                )}\n            </div>\n          </div>\n\n          <div className=\"form__container form__container--numbers\">\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"page-time\"\n                text=\"Time per page (min)\"\n                className=\"form__element__label input-required\"\n              ></Label>\n              <input\n                className=\"form__element__input\"\n                type=\"number\"\n                min=\"0\"\n                id=\"page-time\"\n                label=\"exam_page_time\"\n                name=\"timePerPage\"\n                onChange={handleChange.bind(null, \"timePerPage\")}\n                value={timePerPage}\n                ref={register({\n                  required: true,\n                  min: 1,\n                  max: 600,\n                })}\n                required\n              />\n              {errors.exam_page_time &&\n                errors.exam_page_time.type === \"required\" && (\n                  <span className=\"error\">This field is required</span>\n                )}\n              {errors.exam_page_time &&\n                errors.exam_page_time.type === \"max\" && (\n                  <span className=\"error\">\n                    {\" \"}\n                    The maximum is 600 minutes (10 hours)\n                  </span>\n                )}\n              {errors.exam_page_time &&\n                errors.exam_page_time.type === \"min\" && (\n                  <span className=\"error\">\n                    Only positive numbers are allowed\n                  </span>\n                )}\n            </div>\n\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"page-repeat\"\n                text=\"Repeat\"\n                className=\"form__element__label\"\n              />\n              <input\n                className=\"form__element__input\"\n                type=\"number\"\n                id=\"page-repeat\"\n                label=\"exam_page_repeat\"\n                name=\"timesRepeat\"\n                onChange={handleChange.bind(null, \"timesRepeat\")}\n                value={timesRepeat}\n                ref={register({\n                  required: false,\n                  min: 1,\n                  max: 1000,\n                })}\n              />\n            </div>\n            {errors.exam_page_repeat &&\n              errors.exam_page_repeat.type === \"max\" && (\n                <span className=\"error\"> The maximum is 1000 repeats</span>\n              )}\n            {errors.exam_page_repeat &&\n              errors.exam_page_repeat.type === \"min\" && (\n                <span className=\"error\">Only positive numbers are allowed</span>\n              )}\n          </div>\n        </div>\n\n        <div className=\"col-md-6 form__right\">\n          <div className=\"form__right--top\">\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"page-notes\"\n                text=\"Notes\"\n                className=\"form__element__label\"\n              />\n              <textarea\n                className=\"form__element__input\"\n                id=\"page-notes\"\n                label=\"exam_page_notes\"\n                name=\"notes\"\n                onChange={handleChange.bind(null, \"notes\")}\n                value={notes}\n                ref={register({\n                  required: false,\n                  maxLength: 100000000,\n                })}\n              />\n              {errors.exam_page_notes &&\n                errors.exam_page_notes.type === \"maxLength\" && (\n                  <span className=\"error\">\n                    The maximal length is 100.000.000 characters\n                  </span>\n                )}\n            </div>\n\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"currentPage\"\n                text=\"Current page\"\n                className=\"form__element__label\"\n              ></Label>\n              <input\n                className=\"form__element__input\"\n                type=\"text\"\n                id=\"currentPage\"\n                label=\"exam_current_page\"\n                name=\"currentPage\"\n                onChange={handleChange.bind(null, \"currentPage\")}\n                value={currentPage}\n                ref={register({\n                  required: false,\n                })}\n              />\n            </div>\n\n            <div className=\"form__element\">\n              <Label\n                htmlFor=\"pdf-link\"\n                text=\"Pdf link\"\n                className=\"form__element__label\"\n              ></Label>\n              <input\n                className=\"form__element__input\"\n                type=\"text\"\n                id=\"pdf-link\"\n                label=\"exam_pdf_upload\"\n                name=\"pdfLink\"\n                onChange={handleChange.bind(null, \"pdfLink\")}\n                value={pdfLink}\n                ref={register({\n                  required: false,\n                })}\n              />\n            </div>\n          </div>\n\n          <div className=\"form__submit\">\n            <Button\n              className=\"form__element__btn stan-btn-primary\"\n              variant=\"button\"\n              text=\"Save\"\n            />\n          </div>\n        </div>\n\n        <div className=\"col-md-12\">\n          <p className=\"error graphql-exam-details-edit-error\"></p>\n        </div>\n\n        <div className=\"col-md-12\" id=\"success-container-edit-exam\">\n          <p className=\"success\">the changes were successfully saved</p>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default ExamDetailsEdit\n\nasync function handleExam({ examId, data, updateExam, history }) {\n  try {\n    const resp = await updateExam({\n      variables: {\n        id: examId,\n        subject: data.subject,\n        examDate: data.examDate,\n        startDate: data.startDate,\n        numberPages: parseInt(data.numberPages),\n        timePerPage: parseInt(data.timePerPage),\n        timesRepeat: parseInt(data.timesRepeat),\n        startPage: parseInt(data.startPage),\n        currentPage: parseInt(data.currentPage),\n        notes: data.notes,\n        pdfLink: data.pdfLink,\n        completed: false,\n      },\n    })\n\n    if (resp && resp.data && resp.data.updateExam) {\n      document.getElementById(\"success-container-edit-exam\").style.display =\n        \"block\"\n    } else {\n      throw new Error(\"Cannot edit current exam.\")\n    }\n  } catch (err) {\n    let element = document.getElementsByClassName(\n      \"graphql-exam-details-edit-error\"\n    )\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst ExamBar = ({ value }) => {\n  // return ----------------\n  return (\n    <div className=\"exam-bar\">\n      <div className=\"exam-bar__filler\" style={{ width: `${value}%` }}></div>\n    </div>\n  )\n}\n\nexport default ExamBar\n","import React from \"react\"\n\n// sub-components ----------------\nimport ExamBar from \"../progressbar/ProgressBar\"\n\n// helpers ----------------\nimport { getNumberOfDays, formatDate } from \"../../helpers/dates\"\n\nconst ExamDetailsInfo = ({ examDetails }) => {\n  // calculation ----------------\n  const today = new Date()\n\n  const todaysDayUntilDeadline = getNumberOfDays(\n    today,\n    new Date(examDetails.examDate)\n  )\n\n  // return ----------------\n  return (\n    <div className=\"exam-details__inner--details\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"exam-details__inner--details--left\">\n              <div className=\"exam-data\">\n                <h4>Exam date</h4>\n                <p>{formatDate(examDetails.examDate)}</p>\n              </div>\n\n              <div className=\"exam-data\">\n                <h4>Start learning on</h4>\n                <p>{formatDate(examDetails.startDate)}</p>\n              </div>\n\n              <div className=\"exam-data\">\n                <h4>Amount of pages</h4>\n                <p>{examDetails.numberPages}</p>\n              </div>\n\n              <div className=\"exam-data\">\n                <h4>Time per pages</h4>\n                <p>{examDetails.timePerPage} min.</p>\n              </div>\n\n              <div className=\"exam-data\">\n                <h4>Repeat</h4>\n                {examDetails.timesRepeat > 1 ? (\n                  <p>{examDetails.timesRepeat} times</p>\n                ) : (\n                  <p>{examDetails.timesRepeat} time</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-8\">\n            <div className=\"exam-details__inner--details--right\">\n              <div className=\"exam-data\">\n                <h4>Days until deadline</h4>\n                <p>{todaysDayUntilDeadline} days left</p>\n              </div>\n              <div className=\"exam-data\">\n                <h4>Studied</h4>\n                <p>\n                  {(\n                    (100 * examDetails.currentPage) /\n                    (examDetails.numberPages * examDetails.timesRepeat)\n                  ).toFixed(2)}\n                  % of 100%\n                </p>\n              </div>\n              <div className=\"exam-pages\">\n                <h4>Pages left</h4>\n\n                <div className=\"exam-pages__bar\">\n                  <ExamBar\n                    value={\n                      (100 * examDetails.currentPage) /\n                      (examDetails.numberPages * examDetails.timesRepeat)\n                    }\n                  />\n\n                  <div className=\"exam-pages__bar--status\">\n                    <p>\n                      {Math.round(\n                        examDetails.numberPages - examDetails.currentPage\n                      )}{\" \"}\n                      pages left\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"exam-data\">\n                <h4>Pages studied</h4>\n                <p>\n                  {examDetails.currentPage}/{examDetails.numberPages}\n                </p>\n              </div>\n              <div className=\"pdf\">\n                <div className=\"pdf--file\">\n                  <h4>PDF file</h4>\n\n                  <p>{examDetails.pdfLink}</p>\n                </div>\n                <a\n                  href={examDetails.pdfLink}\n                  // target=\"_blank\"\n                  className=\"stan-btn-secondary\"\n                >\n                  open\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12\">\n            <div className=\"exam-details__inner--details--bottom\">\n              <h4>Notes</h4>\n\n              <div className=\"notes\">\n                {!examDetails.notes ? <p>...</p> : <p>{examDetails.notes}</p>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ExamDetailsInfo\n","import React, { useState } from \"react\"\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// context ----------------\nimport { useCurrentUserValue } from \"../../components/STAN/STAN\"\n\n// queries ----------------\nimport { GET_EXAM_QUERY, GET_EXAMS_QUERY } from \"../../graphQL/queries\"\nimport {\n  DELETE_EXAM_MUTATION,\n  EXAM_COMPLETED_MUTATION,\n} from \"../../graphQL/mutations\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\n// components ----------------\nimport ExamDetailsEdit from \"../current-exam/ExamDetailsEdit\"\nimport ExamDetailsInfo from \"../current-exam/ExamDetailsInfo\"\n\n// sub-components ----------------\nimport Button from \"../button/Button\"\nimport QueryError from \"../error/Error\"\nimport Loading from \"../loading/Loading\"\n\nconst getParamId = location => {\n  const searchParams = new URLSearchParams(location.search)\n  return {\n    id: searchParams.get(\"id\") || \"0\",\n  }\n}\n\nconst ExamDetails = () => {\n  // states ----------------\n  let [edit, openEdit] = useState(false)\n  let [popup, openPopup] = useState(false)\n  let [completed, setCompleted] = useState(false)\n\n  // routes ----------------\n  let history = useHistory()\n  const location = useLocation()\n  let paramId = getParamId(location)\n\n  // query ----------------\n  const { loading, error, data } = useQuery(GET_EXAM_QUERY, {\n    variables: { id: paramId.id },\n  })\n\n  // mutation ----------------\n  const [deleteExam] = useMutation(DELETE_EXAM_MUTATION, {\n    refetchQueries: [{ query: GET_EXAMS_QUERY }],\n  })\n  const [examCompleted] = useMutation(EXAM_COMPLETED_MUTATION, {\n    refetchQueries: [{ query: GET_EXAMS_QUERY }],\n  })\n\n  // redirects ----------------\n  const currentUser = useCurrentUserValue()\n  if (currentUser === undefined || paramId.id === \"0\") {\n    return <Redirect to=\"/login\" />\n  }\n\n  // variables ----------------\n  let examDetails\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n  if (data) {\n    examDetails = data.exam\n  }\n\n  // functions ----------------\n  const handleEdit = () => {\n    openEdit(edit => !edit)\n  }\n\n  const handlePopup = () => {\n    openPopup(popup => !popup)\n  }\n\n  const handleDeletion = () => {\n    examDeletion({ paramId, deleteExam, history })\n  }\n\n  const handleCompletion = () => {\n    setCompleted(completed => !completed)\n    completeExam({ paramId, examCompleted, history })\n  }\n\n  // return ----------------\n  return (\n    <div className=\"exam-details\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-1\"></div>\n          <div className=\"col-md-10\">\n            <div className=\"exam-details__headline\">\n              <h2>{examDetails.subject}</h2>\n\n              <Button\n                variant=\"button\"\n                onClick={() => {\n                  history.goBack()\n                }}\n                className=\"exam-details__headline--back-btn\"\n              />\n            </div>\n\n            <div className=\"exam-details__inner box-content\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"exam-details__inner--bar\">\n                    <div className=\"exam-details__inner--bar--headline\">\n                      <h3>Exam details</h3>\n                    </div>\n\n                    <div className=\"exam-details__inner--bar--right\">\n                      {!edit && !examDetails.completed ? (\n                        <Button\n                          variant=\"button\"\n                          onClick={handleEdit}\n                          className=\"exam-btn\"\n                          text=\"edit\"\n                        />\n                      ) : null}\n\n                      {edit && !examDetails.completed ? (\n                        <Button\n                          variant=\"button\"\n                          onClick={handleEdit}\n                          className=\"exam-btn\"\n                          text=\"back\"\n                        />\n                      ) : null}\n\n                      {edit || examDetails.completed ? (\n                        <Button\n                          variant=\"button\"\n                          onClick={handlePopup}\n                          className=\"exam-btn delete-btn\"\n                          text=\"delete\"\n                        />\n                      ) : null}\n\n                      <Button\n                        variant=\"button\"\n                        onClick={() => {\n                          history.goBack()\n                        }}\n                        className=\"exam-btn close-btn\"\n                        text=\"close\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {edit ? (\n                  <div className=\"col-md-12\">\n                    <ExamDetailsEdit examId={examDetails.id} />\n                  </div>\n                ) : null}\n\n                {!edit ? (\n                  <div className=\"col-md-12\">\n                    <ExamDetailsInfo examDetails={examDetails} />\n                  </div>\n                ) : null}\n\n                {popup ? (\n                  <div className=\"col-md-12\">\n                    <div className=\"exam-details__popup\">\n                      <div className=\"container-fluid\">\n                        <div className=\"row\">\n                          <div className=\"exam-details__popup--inner box-content\">\n                            <div className=\"exam-details__popup--inner--headline\">\n                              <h4>\n                                Are you sure you want to delete this exam?\n                              </h4>\n                            </div>\n\n                            <div className=\"exam-details__popup--inner--buttons\">\n                              <Button\n                                className=\"stan-btn-secondary\"\n                                text=\"Yes\"\n                                onClick={handleDeletion}\n                              />\n                              <Button\n                                className=\"stan-btn-primary\"\n                                text=\"No\"\n                                onClick={handlePopup}\n                              />\n                            </div>\n\n                            <div className=\"col-md-12\">\n                              <p className=\"error graphql-exam-details-error\"></p>\n                            </div>\n\n                            <div\n                              className=\"col-md-12\"\n                              id=\"success-container-exam-detail\"\n                            >\n                              <p className=\"success\">\n                                the exam was successfully deleted\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : null}\n\n                {!edit ? (\n                  <div className=\"col-md-12\">\n                    <div className=\"exam-details__inner--button\">\n                      <Button\n                        className=\"stan-btn-primary\"\n                        variant=\"button\"\n                        text=\"Completed\"\n                        onClick={handleCompletion}\n                      />\n                    </div>\n                  </div>\n                ) : null}\n\n                <div className=\"col-md-12\">\n                  <p className=\"error graphql-exam-completion-error\"></p>\n                </div>\n\n                <div\n                  className=\"col-md-12\"\n                  id=\"success-container-exam-completed\"\n                >\n                  <p className=\"success\">the exam was successfully completed</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-1\"></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ExamDetails\n\nasync function examDeletion({ paramId, deleteExam, history }) {\n  try {\n    const resp = await deleteExam({\n      variables: {\n        id: paramId.id,\n      },\n    })\n\n    if (resp && resp.data && resp.data.deleteExam) {\n      document.getElementById(\"success-container-exam-detail\").style.display =\n        \"block\"\n    } else {\n      throw new Error(\"The deletion of current exam failed.\")\n    }\n\n    // redirect ----------------\n    setTimeout(() => {\n      history.push(\"/exams\")\n    }, 1000)\n  } catch (err) {\n    // error handling ----------------\n    let element = document.getElementsByClassName(\"graphql-exam-details-error\")\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n\nasync function completeExam({ paramId, examCompleted, history }) {\n  try {\n    const resp = await examCompleted({\n      variables: {\n        id: paramId.id,\n      },\n    })\n\n    if (resp && resp.data && resp.data.examCompleted) {\n      document.getElementById(\n        \"success-container-exam-completed\"\n      ).style.display = \"block\"\n    } else {\n      throw new Error(\"The completion of current exam failed.\")\n    }\n\n    // redirect ----------------\n    setTimeout(() => {\n      history.push(\"/exams\")\n    }, 2000)\n  } catch (err) {\n    // error handling ----------------\n    let element = document.getElementById(\"graphql-exam-completion-error\")\n\n    if (err.graphQLErrors && err.graphQLErrors[0]) {\n      element[0].innerHTML = err.graphQLErrors[0].message\n    } else {\n      element[0].innerHTML = err.message\n    }\n  }\n}\n","import React from \"react\"\nimport { Switch, Route, withRouter } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// pages component ----------------\nimport AddNew from \"../../pages/add-new-page/AddNewPage\"\nimport Calendar from \"../../pages/calendar-page/CalendarPage\"\nimport Exams from \"../../pages/exams-page/ExamsPage\"\nimport NoMatch404 from \"../../pages/no-match-page/404Page\"\nimport UserAccount from \"../../pages/user-account-page/UserAccountPage\"\nimport UserAccountEdit from \"../../pages/user-account-page/UserAccountEdit\"\nimport Imprint from \"../../pages/imprint-page/ImprintPage\"\nimport DataPolicy from \"../../pages/data-policy-page/DataPolicyPage\"\nimport Login from \"../../pages/login-page/LoginPage\"\nimport SignUp from \"../../pages/sign-up-page/SignUpPage\"\nimport Home from \"../../pages/home-page/HomePage\"\nimport About from \"../../pages/about-page/AboutPage\"\nimport LoginPopUp from \"../../components/login-popup/LoginPopUp\"\nimport ExamsDetails from \"../../components/current-exam/ExamDetails\"\n\nconst Content = ({ location }) => {\n  // return ----------------\n  return (\n    <main className=\"content\">\n      <Switch location={location}>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/sign-up\" component={SignUp} />\n        <Route exact path=\"/popup\" component={LoginPopUp} />\n\n        <Route exact path=\"/add-new\" component={AddNew} />\n        <Route exact path=\"/calendar\" component={Calendar} />\n        <Route exact path=\"/exams\" component={Exams} />\n        <Route exact path=\"/exams/:subject\" component={ExamsDetails} />\n        <Route exact path=\"/profile\" component={UserAccount} />\n        <Route exact path=\"/profile/edit\" component={UserAccountEdit} />\n\n        <Route exact path=\"/imprint\" component={Imprint} />\n        <Route exact path=\"/data-policy\" component={DataPolicy} />\n        <Route path=\"*\" component={NoMatch404} />\n      </Switch>\n    </main>\n  )\n}\n\nexport default withRouter(Content)\n","import React from \"react\"\n// --------------------------------------------------------------\n\nconst backdrop = props => <div className=\"backdrop\" onClick={props.click} />\n\nexport default backdrop\n","import React, { createContext, useContext, useState } from \"react\"\nimport { BrowserRouter as Router, Link, NavLink } from \"react-router-dom\"\n// --------------------------------------------------------------\n\n// mutation & queries ----------------\nimport { CURRENT_USER } from \"../../graphQL/queries\"\nimport { useQuery } from \"@apollo/react-hooks\"\n\n// images & logos ----------------\nimport Image from \"../../components/image/Image\"\nimport Logo from \"../../images/icons/logo.svg\"\nimport Pic1 from \"../../images/icons/profile.png\"\n\n// components ----------------\nimport BurgerButton from \"../burger-button/BurgerButton\"\nimport Content from \"../content/Content\"\nimport Backdrop from \"../backdrop/Backdrop\"\nimport QueryError from \"../error/Error\"\nimport Loading from \"../loading/Loading\"\n\nexport const CurrentUserContext = createContext()\n\nconst Navbar = () => {\n  // state ----------------\n  const [isSideBarOpen, setSideBar] = useState(false)\n\n  // query ----------------\n  const { data, loading, error } = useQuery(CURRENT_USER)\n  let currentUser\n\n  if (loading) return <Loading />\n  if (error) return <QueryError errorMessage={error.message} />\n  if (data && data.currentUser) {\n    currentUser = data.currentUser\n  }\n\n  // variables ----------------\n  let backdrop = null\n\n  // functions & conditions ----------------\n  const handleClickSidebar = () => {\n    setSideBar(isSideBarOpen => !isSideBarOpen)\n  }\n\n  const closeSidebar = () => {\n    setSideBar(false)\n  }\n\n  if (isSideBarOpen) backdrop = <Backdrop click={handleClickSidebar} />\n\n  // return ----------------\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Router className=\"navigation\">\n        <div className=\"burger\">\n          <div className={isSideBarOpen ? \"close-burger\" : \"open-burger\"}>\n            <Link to=\"/\">\n              <img src={Logo} alt=\"Stans Logo\" className=\"burger__logo\" />\n            </Link>\n            <BurgerButton click={handleClickSidebar} />\n          </div>\n        </div>\n\n        <nav\n          className={\n            isSideBarOpen ? \"show-responsive-nav\" : \"close-responsive-nav\"\n          }\n        >\n          <div className=\"navigation__items\">\n            <div className=\"navigation__items--logo\">\n              <Link to=\"/\">\n                <img src={Logo} alt=\"Stans Logo\" />\n              </Link>\n            </div>\n\n            <ul className=\"navigation__items--list\">\n              <div className=\"menu-top\">\n                {/* HOME & DASHBOARD */}\n                {!currentUser ? (\n                  <li className=\"logged-out home\">\n                    <NavLink\n                      strict\n                      to=\"/\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      Home\n                    </NavLink>\n                  </li>\n                ) : (\n                  <li className=\"logged-in dashboard\">\n                    <NavLink\n                      strict\n                      to=\"/\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      Dashboard\n                    </NavLink>\n                  </li>\n                )}\n\n                {/* ABOUT & ADD NEW */}\n                {!currentUser ? (\n                  <li className=\"logged-out about\">\n                    <NavLink\n                      strict\n                      to=\"/about\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      About\n                    </NavLink>\n                  </li>\n                ) : (\n                  <li className=\"logged-in add-new\">\n                    <NavLink\n                      strict\n                      to=\"/add-new\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      Add New\n                    </NavLink>\n                  </li>\n                )}\n\n                {/* LOGIN & Calendar */}\n                {!currentUser ? (\n                  <li className=\"logged-out login\">\n                    <NavLink\n                      strict\n                      to=\"/login\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      Login\n                    </NavLink>\n                  </li>\n                ) : (\n                  <li className=\"logged-in calendar\">\n                    <NavLink\n                      strict\n                      to=\"/calendar\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      Calendar\n                    </NavLink>\n                  </li>\n                )}\n\n                {/* Exams */}\n                {currentUser ? (\n                  <li className=\"logged-in exams\">\n                    <NavLink\n                      strict\n                      to=\"/exams\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      Exams\n                    </NavLink>\n                  </li>\n                ) : null}\n              </div>\n\n              <div className=\"menu-bottom\">\n                {/* USER PROFILE */}\n                {currentUser ? (\n                  <li className=\"profile\">\n                    <NavLink\n                      strict\n                      to=\"/profile\"\n                      exact\n                      activeClassName=\"active\"\n                      onClick={closeSidebar}\n                    >\n                      <Image\n                        path={Pic1}\n                        alt=\"Shape of a person as profile Icon\"\n                        className=\"profile-img\"\n                      />\n                    </NavLink>\n                  </li>\n                ) : null}\n\n                {/* PUBLIC ROUTES */}\n                <li className=\"dark-mode\">Dark mode</li>\n                <li className=\"imprint\">\n                  <NavLink\n                    strict\n                    to=\"/imprint\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    Imprint\n                  </NavLink>\n                </li>\n                <li className=\"data-policy\">\n                  <NavLink\n                    strict\n                    to=\"/data-policy\"\n                    exact\n                    activeClassName=\"active\"\n                    onClick={closeSidebar}\n                  >\n                    Data Policy\n                  </NavLink>\n                </li>\n              </div>\n            </ul>\n          </div>\n        </nav>\n\n        {backdrop}\n        <Content />\n      </Router>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default Navbar\nexport const useCurrentUserValue = () => useContext(CurrentUserContext)\n","import React, { useState, useEffect } from \"react\"\nimport \"./App.scss\"\n// import ApolloClient from \"apollo-boost\"\nimport { ApolloProvider } from \"@apollo/react-hooks\" //inserts received data into our app\nimport { setAccessToken } from \"./accessToken\"\nimport { BrowserRouter as Router, Redirect } from \"react-router-dom\"\n\nimport { client } from \"./apolloClient\"\n\n// components\nimport STAN from \"./components/STAN/STAN\"\nimport Loading from \"./components/loading/Loading\"\n\nimport { Cube } from \"react-preloaders\"\n\nconst RedirectPopup = () => {\n  return (\n    <Router>\n      <Redirect to=\"/popup\" />\n    </Router>\n  )\n}\n\n/* TODO: CACHING APOLLO */\nconst App = () => {\n  const [loading, setLoading] = useState(true)\n\n  //TODO-LOGOUT-ALL-TABS\n  window.addEventListener(\"storage\", e => {\n    if (e.key === \"logout-event\") {\n      localStorage.removeItem(\"logout-event\")\n      RedirectPopup()\n      localStorage.setItem(\"popup-event\", true)\n      window.location.replace(\"/popup\")\n    }\n  })\n\n  useEffect(() => {\n    // TODO: if save accesstoken in store, use the if - but if only save in memory delete\n    //if (!getAccessToken()) {\n    // fetch(\"http://localhost:5000/refresh_token\", {\n    // console.log(\"here:\" + process.env.DOMAIN_REFRESH_TOKEN)\n    fetch(\"/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\",\n    })\n      .then(async resp => {\n        const { accessToken } = await resp.json()\n        setAccessToken(accessToken)\n        setLoading(false)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n    // }\n\n    //In case a second tab wasn't open, to make sure it is deleted\n    // localStorage.removeItem(\"logout-event\")\n  }, [])\n\n  if (loading) return <Loading />\n\n  return (\n    <ApolloProvider client={client}>\n      <header>\n        <h1 className=\"hide\">Stan - online study plan</h1>\n      </header>\n\n      <STAN />\n      <Cube customLoading={loading} background=\"#ffffff\" />\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/0-0.0a915fbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/1-0.443d414d.svg\";","module.exports = __webpack_public_path__ + \"static/media/2-0.05f1a491.svg\";","module.exports = __webpack_public_path__ + \"static/media/0-stressed-1.05296729.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.1af37ff3.svg\";","var map = {\n\t\"./0-happy-0.svg\": 165,\n\t\"./0-okay-0.svg\": 166,\n\t\"./0-stressed-0.svg\": 167,\n\t\"./0-veryhappy-0.svg\": 168,\n\t\"./0-verystressed-0.svg\": 169,\n\t\"./1-happy-0.svg\": 170,\n\t\"./1-okay-0.svg\": 171,\n\t\"./1-stressed-0.svg\": 172,\n\t\"./1-veryhappy-0.svg\": 173,\n\t\"./1-verystressed-0.svg\": 174,\n\t\"./2-happy-0.svg\": 175,\n\t\"./2-okay-0.svg\": 176,\n\t\"./2-stressed-0.svg\": 177,\n\t\"./2-veryhappy-0.svg\": 178,\n\t\"./2-verystressed-0.svg\": 179,\n\t\"./user-mascot/0-0.svg\": 44,\n\t\"./user-mascot/1-0.svg\": 45,\n\t\"./user-mascot/2-0.svg\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 93;","var map = {\n\t\"./0-happy-1.svg\": 180,\n\t\"./0-okay-1.svg\": 181,\n\t\"./0-stressed-1.svg\": 83,\n\t\"./0-veryhappy-1.svg\": 182,\n\t\"./0-verystressed-1.svg\": 183,\n\t\"./1-happy-1.svg\": 184,\n\t\"./1-okay-1.svg\": 185,\n\t\"./1-stressed-1.svg\": 186,\n\t\"./1-veryhappy-1.svg\": 187,\n\t\"./1-verystressed-1.svg\": 188,\n\t\"./2-happy-1.svg\": 189,\n\t\"./2-okay-1.svg\": 190,\n\t\"./2-stressed-1.svg\": 191,\n\t\"./2-veryhappy-1.svg\": 192,\n\t\"./2-verystressed-1.svg\": 193,\n\t\"./user-mascot/0-1.svg\": 194,\n\t\"./user-mascot/1-1.svg\": 195,\n\t\"./user-mascot/2-1.svg\": 196\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 94;","var map = {\n\t\"./0-happy-2.svg\": 197,\n\t\"./0-okay-2.svg\": 198,\n\t\"./0-stressed-2.svg\": 199,\n\t\"./0-veryhappy-2.svg\": 200,\n\t\"./0-verystressed-2.svg\": 201,\n\t\"./1-happy-2.svg\": 202,\n\t\"./1-okay-2.svg\": 203,\n\t\"./1-stressed-2.svg\": 204,\n\t\"./1-veryhappy-2.svg\": 205,\n\t\"./1-verystressed-2.svg\": 206,\n\t\"./2-happy-2.svg\": 207,\n\t\"./2-okay-2.svg\": 208,\n\t\"./2-stressed-2.svg\": 209,\n\t\"./2-veryhappy-2.svg\": 210,\n\t\"./2-verystressed-2.svg\": 211,\n\t\"./user-mascot/0-2.svg\": 212,\n\t\"./user-mascot/1-2.svg\": 213,\n\t\"./user-mascot/2-2.svg\": 214\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 95;"],"sourceRoot":""}